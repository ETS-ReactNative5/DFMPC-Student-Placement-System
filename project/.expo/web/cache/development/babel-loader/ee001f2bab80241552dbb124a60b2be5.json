{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Separator = function Separator() {\n  return _jsx(View, {\n    style: styles.separator\n  });\n};\n\nvar navigation = useNavigation();\n\nvar PanicButton = function (_Component) {\n  _inherits(PanicButton, _Component);\n\n  var _super = _createSuper(PanicButton);\n\n  function PanicButton() {\n    _classCallCheck(this, PanicButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PanicButton, [{\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, {\n          children: _jsx(Button, {\n            title: \"Protocols\",\n            onPress: function onPress() {\n              return navigation.navigate(\"Protocols\");\n            }\n          })\n        }), _jsx(Separator, {}), _jsx(View, {\n          children: _jsx(Button, {\n            title: \"Press me\",\n            color: \"#f194ff\",\n            onPress: function onPress() {\n              return Alert.alert('Button with adjusted color pressed');\n            }\n          })\n        }), _jsx(Separator, {}), _jsx(View, {\n          children: _jsxs(View, {\n            style: styles.fixToText,\n            children: [_jsx(Button, {\n              title: \"Left button\",\n              onPress: function onPress() {\n                return Alert.alert('Left button pressed');\n              }\n            }), _jsx(Button, {\n              title: \"Right button\",\n              onPress: function onPress() {\n                return Alert.alert('Right button pressed');\n              }\n            })]\n          })\n        }), _jsx(Separator, {}), _jsx(View, {\n          style: styles.container\n        })]\n      });\n    }\n  }]);\n\n  return PanicButton;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    marginHorizontal: 16\n  },\n  title: {\n    textAlign: 'center',\n    marginVertical: 8\n  },\n  fixToText: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: '#737373',\n    borderBottomWidth: StyleSheet.hairlineWidth\n  },\n  map: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n  }\n});\nexport default PanicButton;","map":{"version":3,"names":["React","Component","requireNativeComponent","useNavigation","Separator","styles","separator","navigation","PanicButton","container","navigate","Alert","alert","fixToText","StyleSheet","create","flex","justifyContent","marginHorizontal","title","textAlign","marginVertical","flexDirection","borderBottomColor","borderBottomWidth","hairlineWidth","map","position","top","left","bottom","right"],"sources":["/home/cipher73/Desktop/Sd Project/DFMPC-Student-Placement-System/project/Screens/PanicButton.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {requireNativeComponent, StyleSheet, Button, View, SafeAreaView, Text, Alert } from 'react-native';\nimport { useNavigation } from \"@react-navigation/core\";\n\nconst Separator = () => (\n  <View style={styles.separator} />\n);\nconst navigation = useNavigation();\nclass PanicButton  extends Component{\n    render(){\nreturn(\n  <View style={styles.container}>\n    <View>\n\n      <Button\n        title=\"Protocols\"\n        onPress={() =>  navigation.navigate(\"Protocols\")}\n\n      />\n    </View>\n    <Separator />\n    <View>\n      <Button\n        title=\"Press me\"\n        color=\"#f194ff\"\n        onPress={() => Alert.alert('Button with adjusted color pressed')}\n      />\n    </View>\n    <Separator />\n\n    <View>\n    \n      <View style={styles.fixToText}>\n        <Button\n          title=\"Left button\"\n          onPress={() => Alert.alert('Left button pressed')}\n        />\n        <Button\n          title=\"Right button\"\n          onPress={() => Alert.alert('Right button pressed')}\n        />\n      </View>\n    </View>\n    <Separator/>\n    <View style={styles.container}>\n      \n               \n            </View>\n  </View>\n  )\n              }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    marginHorizontal: 16,\n  },\n  title: {\n    textAlign: 'center',\n    marginVertical: 8,\n  },\n  fixToText: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: '#737373',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n  map:{\n    position:\"absolute\",\n    top:0,\n    left:0,\n    bottom:0,\n    right:0,\n}\n\n});\n\nexport default PanicButton"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;SACQC,sB;;;;;;;AACR,SAASC,aAAT,QAA8B,wBAA9B;;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;EAAA,OAChB,KAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC;EAApB,EADgB;AAAA,CAAlB;;AAGA,IAAMC,UAAU,GAAGJ,aAAa,EAAhC;;IACMK,W;;;;;;;;;;;;;WACF,kBAAQ;MACZ,OACE,MAAC,IAAD;QAAM,KAAK,EAAEH,MAAM,CAACI,SAApB;QAAA,WACE,KAAC,IAAD;UAAA,UAEE,KAAC,MAAD;YACE,KAAK,EAAC,WADR;YAEE,OAAO,EAAE;cAAA,OAAOF,UAAU,CAACG,QAAX,CAAoB,WAApB,CAAP;YAAA;UAFX;QAFF,EADF,EASE,KAAC,SAAD,KATF,EAUE,KAAC,IAAD;UAAA,UACE,KAAC,MAAD;YACE,KAAK,EAAC,UADR;YAEE,KAAK,EAAC,SAFR;YAGE,OAAO,EAAE;cAAA,OAAMC,KAAK,CAACC,KAAN,CAAY,oCAAZ,CAAN;YAAA;UAHX;QADF,EAVF,EAiBE,KAAC,SAAD,KAjBF,EAmBE,KAAC,IAAD;UAAA,UAEE,MAAC,IAAD;YAAM,KAAK,EAAEP,MAAM,CAACQ,SAApB;YAAA,WACE,KAAC,MAAD;cACE,KAAK,EAAC,aADR;cAEE,OAAO,EAAE;gBAAA,OAAMF,KAAK,CAACC,KAAN,CAAY,qBAAZ,CAAN;cAAA;YAFX,EADF,EAKE,KAAC,MAAD;cACE,KAAK,EAAC,cADR;cAEE,OAAO,EAAE;gBAAA,OAAMD,KAAK,CAACC,KAAN,CAAY,sBAAZ,CAAN;cAAA;YAFX,EALF;UAAA;QAFF,EAnBF,EAgCE,KAAC,SAAD,KAhCF,EAiCE,KAAC,IAAD;UAAM,KAAK,EAAEP,MAAM,CAACI;QAApB,EAjCF;MAAA,EADF;IAwCe;;;;EA1CYR,S;;AA6C3B,IAAMI,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CADG;IAETC,cAAc,EAAE,QAFP;IAGTC,gBAAgB,EAAE;EAHT,CADoB;EAM/BC,KAAK,EAAE;IACLC,SAAS,EAAE,QADN;IAELC,cAAc,EAAE;EAFX,CANwB;EAU/BR,SAAS,EAAE;IACTS,aAAa,EAAE,KADN;IAETL,cAAc,EAAE;EAFP,CAVoB;EAc/BX,SAAS,EAAE;IACTe,cAAc,EAAE,CADP;IAETE,iBAAiB,EAAE,SAFV;IAGTC,iBAAiB,EAAEV,UAAU,CAACW;EAHrB,CAdoB;EAmB/BC,GAAG,EAAC;IACFC,QAAQ,EAAC,UADP;IAEFC,GAAG,EAAC,CAFF;IAGFC,IAAI,EAAC,CAHH;IAIFC,MAAM,EAAC,CAJL;IAKFC,KAAK,EAAC;EALJ;AAnB2B,CAAlB,CAAf;AA6BA,eAAevB,WAAf"},"metadata":{},"sourceType":"module"}