{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { firebase } from \"../firebase\";\nimport 'react-native-get-random-values';\nimport { v4 as uuidv4 } from 'uuid';\nexport function getFoods(foodsRetreived) {\n  var foodList, n, snapshot;\n  return _regeneratorRuntime.async(function getFoods$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          foodList = [{\n            id: 1,\n            Protocol: \"123\",\n            content: \"456\"\n          }];\n          n = foodList.length;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection('emergency_protocols').get());\n\n        case 4:\n          snapshot = _context.sent;\n          snapshot.forEach(function (doc) {\n            var foodItem = doc.data();\n            foodItem.id = doc.id;\n            n++;\n            foodList.push({\n              id: n,\n              Protocol: doc.id,\n              content: doc.data().protocol_1\n            });\n          });\n          foodsRetreived(foodList);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"names":["firebase","v4","uuidv4","getFoods","foodsRetreived","foodList","id","Protocol","content","n","length","firestore","collection","get","snapshot","forEach","doc","foodItem","data","push","protocol_1"],"sources":["/home/cipher73/Desktop/Sd Project/DFMPC-Student-Placement-System/project/Screens/FoodsApi.js"],"sourcesContent":["import {firebase} from \"../firebase\"\nimport 'react-native-get-random-values';\nimport { v4 as uuidv4 } from 'uuid';\n\n\n\nexport async function getFoods(foodsRetreived) {\n\n  var foodList = [{id:1,Protocol:\"123\",content:\"456\"}]\n  var n = foodList.length\n\n  var snapshot = await firebase.firestore()\n    .collection('emergency_protocols')\n    .get()\n\n  snapshot.forEach((doc) => {\n    const foodItem = doc.data();\n    foodItem.id = doc.id;\n    n++\n    foodList.push({id:n,Protocol: doc.id,content:doc.data().protocol_1});\n\n  });\n\n  foodsRetreived(foodList);\n}\n\n\n"],"mappings":";AAAA,SAAQA,QAAR;AACA,OAAO,gCAAP;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAIA,OAAO,SAAeC,QAAf,CAAwBC,cAAxB;EAAA;EAAA;IAAA;MAAA;QAAA;UAEDC,QAFC,GAEU,CAAC;YAACC,EAAE,EAAC,CAAJ;YAAMC,QAAQ,EAAC,KAAf;YAAqBC,OAAO,EAAC;UAA7B,CAAD,CAFV;UAGDC,CAHC,GAGGJ,QAAQ,CAACK,MAHZ;UAAA;UAAA,iCAKgBV,QAAQ,CAACW,SAAT,GAClBC,UADkB,CACP,qBADO,EAElBC,GAFkB,EALhB;;QAAA;UAKDC,QALC;UASLA,QAAQ,CAACC,OAAT,CAAiB,UAACC,GAAD,EAAS;YACxB,IAAMC,QAAQ,GAAGD,GAAG,CAACE,IAAJ,EAAjB;YACAD,QAAQ,CAACX,EAAT,GAAcU,GAAG,CAACV,EAAlB;YACAG,CAAC;YACDJ,QAAQ,CAACc,IAAT,CAAc;cAACb,EAAE,EAACG,CAAJ;cAAMF,QAAQ,EAAES,GAAG,CAACV,EAApB;cAAuBE,OAAO,EAACQ,GAAG,CAACE,IAAJ,GAAWE;YAA1C,CAAd;UAED,CAND;UAQAhB,cAAc,CAACC,QAAD,CAAd;;QAjBK;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}