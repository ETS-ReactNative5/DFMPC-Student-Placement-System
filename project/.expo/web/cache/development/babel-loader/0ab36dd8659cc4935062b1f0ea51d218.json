{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { firebase } from \"../firebase\";\nimport { useNavigation } from '@react-navigation/core';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  function showAlert(title, message) {\n    Alert.alert(title, message, [{\n      text: \"Cancel\",\n      style: \"cancel\"\n    }], {\n      cancelable: true\n    });\n  }\n\n  var LoginFirebase = function LoginFirebase() {\n    var found = false;\n    firebase.database().ref('/users').on('value', function (snapshot) {\n      var key = snapshot.forEach(function (data) {\n        var check_email = snapshot.child(data.key + \"/email\").val();\n        var encrypted = snapshot.child(data.key + \"/password_digest\").val();\n\n        if (check_email === email) {\n          found = true;\n\n          if (encrypted === password) {\n            navigation.navigate(\"Dashboard\");\n          } else {\n            showAlert(\"Password Error\", \"Your email and password do not match\");\n          }\n        }\n      });\n\n      if (found === false) {\n        showAlert(\"Email Error\", \"user does not exist\");\n      }\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.SPSStyle,\n      children: \"Student Placement System\"\n    }), _jsxs(View, {\n      style: styles.inputStyle,\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Enter password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsx(View, {\n      style: styles.btnStyle,\n      children: _jsx(TouchableOpacity, {\n        onPress: LoginFirebase,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      })\n    })]\n  });\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: \"darkcyan\"\n  },\n  inputStyle: {\n    width: \"60%\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    padding: 10,\n    borderRadius: 15,\n    marginTop: 10\n  },\n  btnStyle: {\n    width: \"30%\",\n    backgroundColor: \"rwhite\",\n    marginTop: 50,\n    borderColor: \"lightblue\",\n    borderWidth: 2,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  SPSStyle: {\n    backgroundColor: \"grey\",\n    marginTop: 50,\n    borderColor: \"black\",\n    borderWidth: 2,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: \"black\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  btn: {\n    marginTop: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'green'\n  }\n});","map":{"version":3,"sources":["C:/Users/User/OneDrive - University of Witwatersrand/Wits/Software-Design 2022/DFMPC-Student-Placement-System/project/Screens/Login.js"],"names":["React","useState","useEffect","firebase","useNavigation","Login","email","setEmail","password","setPassword","navigation","showAlert","title","message","Alert","alert","text","style","cancelable","LoginFirebase","found","database","ref","on","snapshot","key","forEach","data","check_email","child","val","encrypted","navigate","styles","container","SPSStyle","inputStyle","input","btnStyle","buttonText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","width","padding","borderRadius","marginTop","borderColor","borderWidth","color","fontSize","fontWeight","btn","paddingVertical","paddingHorizontal","elevation"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect} from 'react'\r\nimport {Platform,Keyboard, TouchableWithoutFeedback,TouchableOpacity,KeyboardAvoidingView,StyleSheet, Text,Button, TextInput, View,Alert } from 'react-native'\r\nimport {firebase} from \"../firebase\"\r\nimport {useNavigation} from '@react-navigation/core'\r\n\r\n\r\nconst Login = () => {\r\n\r\n\r\n    const [email,setEmail]= useState('')\r\n    const [password,setPassword]= useState('')\r\n    const navigation =useNavigation()\r\n\r\n\r\n\r\n    function showAlert(title, message) {\r\n  Alert.alert(\r\n    title,\r\n    message,\r\n    [\r\n      {\r\n        text: \"Cancel\",\r\n       // onPress: () => Alert.alert(\"Cancel Pressed\"),\r\n        style: \"cancel\",\r\n      },\r\n    ],\r\n    {\r\n      cancelable: true,\r\n     \r\n    }\r\n  );\r\n    }\r\n    const LoginFirebase =() =>{\r\n        // login with email and password\r\n\r\n        // check if email exists in the database if so then hash pass and compare \r\n\r\n        var found = false\r\n        firebase.database().ref('/users').on('value',snapshot=>{\r\n            //if(snapshot.val()==email)\r\n               const key = snapshot.forEach(function(data) {\r\n     \r\n                const check_email =snapshot.child(data.key+\"/email\").val();\r\n             \r\n                const encrypted = snapshot.child(data.key+\"/password_digest\").val();\r\n\r\n               if(check_email===email){\r\n                   found =true\r\n              \r\n              \r\n                    if(encrypted===password){\r\n                        navigation.navigate(\"Dashboard\")\r\n                    }\r\n                    else{\r\n                        showAlert(\"Password Error\",\"Your email and password do not match\")\r\n                    }\r\n                }              \r\n            });\r\n           if(found===false){\r\n            showAlert(\"Email Error\",\"user does not exist\")\r\n           }\r\n        })\r\n      }\r\n      // this allows you to switch between different screens\r\n\r\n  return (\r\n    \r\n      //TouchableWithoutFeedback - when i click anywhen outside od the keyboard, the keyboard will disappear\r\n\r\n    //<TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n    <KeyboardAvoidingView \r\n\r\n    style={styles.container}\r\n     // needs fixing // when keyboard appers things move up a bit \r\n      >   \r\n    <Text style={styles.SPSStyle} >Student Placement System</Text> \r\n     <View style={styles.inputStyle}>\r\n         <TextInput\r\n             placeholder=\"Enter email\"\r\n             value={email}\r\n             onChangeText={text => setEmail(text)}   //  set email to what the text is\r\n             style={styles.input}>\r\n         </TextInput>\r\n         <TextInput\r\n             placeholder=\"Enter password\"\r\n             value={password}\r\n             onChangeText={text => setPassword(text)} // set password to what the text is\r\n             style={styles.input}\r\n             secureTextEntry>\r\n\r\n         </TextInput>\r\n     </View>\r\n\r\n     <View style={styles.btnStyle}>\r\n        <TouchableOpacity\r\n            onPress={LoginFirebase}   // when user clicks on login button \r\n            >\r\n            <Text style={styles.buttonText}>Login</Text>\r\n\r\n        </TouchableOpacity>\r\n    </View>\r\n  \r\n\r\n    </KeyboardAvoidingView>\r\n   // </TouchableWithoutFeedback>\r\n  )\r\n}\r\n\r\nexport default Login\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        backgroundColor: \"darkcyan\"\r\n    },\r\n\r\ninputStyle:{\r\nwidth: \"60%\"\r\n\r\n},\r\ninput:{\r\n    backgroundColor:\"white\",\r\n    padding:10,\r\n    borderRadius:15,\r\n    marginTop:10,\r\n},\r\nbtnStyle:{\r\n    width:\"30%\",\r\n    backgroundColor:\"rwhite\",\r\n    marginTop:50,\r\n    borderColor:\"lightblue\",\r\n    borderWidth:2,\r\n    borderRadius:10,\r\n    alignItems:'center'\r\n},\r\nSPSStyle:{\r\n    backgroundColor:\"grey\",\r\n    marginTop:50,\r\n    borderColor:\"black\",\r\n    borderWidth:2,\r\n    borderRadius:10,\r\n    alignItems:'center'\r\n},\r\n\r\nbuttonText:{\r\ncolor:\"black\",\r\nfontSize:16,\r\nfontWeight:\"bold\",\r\n},       \r\nbtn:{\r\n    marginTop:50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 32,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n    backgroundColor: 'green',\r\n}\r\n})"]},"metadata":{},"sourceType":"module"}