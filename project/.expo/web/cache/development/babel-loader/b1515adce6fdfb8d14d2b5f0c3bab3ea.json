{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Audio } from 'expo-av';\nimport { firebase } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar VoiceRecorder = function VoiceRecorder() {\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      recording = _React$useState2[0],\n      setRecording = _React$useState2[1];\n\n  var Separator = function Separator() {\n    return _jsx(View, {\n      style: styles.separator\n    });\n  };\n\n  function startRecording() {\n    var _recording;\n\n    return _regeneratorRuntime.async(function startRecording$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log('Requesting permissions..');\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Audio.requestPermissionsAsync());\n\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(Audio.setAudioModeAsync({\n              allowsRecordingIOS: true,\n              playsInSilentModeIOS: true\n            }));\n\n          case 6:\n            console.log('Starting recording..');\n            _recording = new Audio.Recording();\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(_recording.prepareToRecordAsync(Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY));\n\n          case 10:\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(_recording.startAsync());\n\n          case 12:\n            setRecording(_recording);\n            console.log('Recording started');\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Failed to start recording', _context.t0);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 16]], Promise);\n  }\n\n  function stopRecording() {\n    var uri;\n    return _regeneratorRuntime.async(function stopRecording$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log('Stopping recording..');\n            setRecording(undefined);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(recording.stopAndUnloadAsync());\n\n          case 4:\n            uri = recording.getURI();\n            console.log('Recording stopped and stored at', uri);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function saveToFirebase() {\n    return _regeneratorRuntime.async(function saveToFirebase$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            firebase.database().ref('./Recordings').set({\n              Sound: \"sound\"\n            }).then(function () {\n              return console.log(\"done\");\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Button, {\n      style: styles.button,\n      title: recording ? 'Stop Recording' : 'Start Recording',\n      onPress: recording ? stopRecording : startRecording\n    }), _jsx(Separator, {}), _jsx(Button, {\n      style: styles.button,\n      title: 'Save Recording',\n      onPress: function onPress() {\n        return saveToFirebase();\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1',\n    padding: 10\n  },\n  button: {\n    marginVertical: 8,\n    marginTop: 30\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: '#737373',\n    borderBottomWidth: StyleSheet.hairlineWidth\n  }\n});\nexport default VoiceRecorder;","map":{"version":3,"names":["React","Audio","firebase","VoiceRecorder","useState","recording","setRecording","Separator","styles","separator","startRecording","console","log","requestPermissionsAsync","setAudioModeAsync","allowsRecordingIOS","playsInSilentModeIOS","Recording","prepareToRecordAsync","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","startAsync","error","stopRecording","undefined","stopAndUnloadAsync","uri","getURI","saveToFirebase","database","ref","set","Sound","then","container","button","StyleSheet","create","flex","justifyContent","backgroundColor","padding","marginVertical","marginTop","borderBottomColor","borderBottomWidth","hairlineWidth"],"sources":["/home/cipher73/Desktop/Sd Project/DFMPC-Student-Placement-System/project/Screens/VoiceRecorder.js"],"sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, Button } from 'react-native';\nimport { Audio } from 'expo-av';\nimport {firebase} from \"../firebase\"\n\nconst VoiceRecorder =()=>{\nconst [recording, setRecording] = React.useState();\nconst Separator = () => (\n  <View style={styles.separator} />\n);\nasync function startRecording() {\n    try {\n      console.log('Requesting permissions..');\n      await Audio.requestPermissionsAsync();\n      await Audio.setAudioModeAsync({\n        allowsRecordingIOS: true,\n        playsInSilentModeIOS: true,\n      }); \n      console.log('Starting recording..');\n      const recording = new Audio.Recording();\n      await recording.prepareToRecordAsync(Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY);\n      await recording.startAsync(); \n      setRecording(recording);\n      console.log('Recording started');\n    } catch (err) {\n      console.error('Failed to start recording', err);\n    }\n  }\n  async function stopRecording() {\n    console.log('Stopping recording..');\n    setRecording(undefined);\n    await recording.stopAndUnloadAsync();\n    const uri = recording.getURI(); \n    console.log('Recording stopped and stored at', uri);\n  }\n\n  async function saveToFirebase(){\n    \n       firebase.database().ref('./Recordings')\n       .set({\n         Sound:\"sound\"\n       }).then(()=>console.log(\"done\"))\n  }\n\n  return (\n    <View style={styles.container}>\n      <Button\n        style={styles.button}\n        title={recording ? 'Stop Recording' : 'Start Recording'}\n        onPress={recording ? stopRecording : startRecording}\n      />\n      <Separator />\n      <Button\n        style={styles.button}\n        title={'Save Recording'}\n        onPress={()=>saveToFirebase()}\n      />\n    </View>\n  );\n}\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      backgroundColor: '#ecf0f1',\n      padding: 10,\n    },\n    button: {\n      marginVertical: 8,\n      marginTop:30,\n    },\n    separator: {\n      marginVertical: 8,\n      borderBottomColor: '#737373',\n      borderBottomWidth: StyleSheet.hairlineWidth,\n    },\n  });\n\n  export default VoiceRecorder"],"mappings":"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"},"metadata":{},"sourceType":"module"}