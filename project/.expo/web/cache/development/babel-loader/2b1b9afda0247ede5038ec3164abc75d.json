{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { getList } from \"./ListApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Protocols = function Protocols() {\n  var _useState = useState({\n    protocolList: [{\n      key: 0,\n      Protocol: \"\",\n      content: \"\"\n    }]\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var onReceive = function onReceive(protocolList) {\n    setState(function (prevState) {\n      return {\n        protocolList: prevState.protocolList = protocolList\n      };\n    });\n  };\n\n  getList(onReceive);\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var toogle = function toogle(i) {\n    if (selected == i) {\n      return setSelected(null);\n    }\n\n    setSelected(i);\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(ScrollView, {\n        style: styles.container,\n        children: state.protocolList.map(function (item, key) {\n          return _jsxs(View, {\n            children: [_jsxs(TouchableOpacity, {\n              style: styles.item,\n              onPress: function onPress() {\n                return toogle(key);\n              },\n              children: [_jsx(Text, {\n                style: styles.itemText,\n                children: item.Protocol\n              }), _jsx(\"image\", {\n                src: selected === key ? './Images/minus.png' : './Images/plus.png'\n              })]\n            }), _jsx(View, {\n              style: selected === key ? styles.content_show : styles.contentHide,\n              children: _jsx(Text, {\n                children: item.content\n              })\n            })]\n          });\n        })\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'cream'\n  },\n  header: {\n    flexDirection: 'row',\n    padding: 10\n  },\n  item: {\n    backgroundColor: 'cream',\n    padding: 20\n  },\n  itemText: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: 'darkblue'\n  },\n  contentHide: {\n    cursor: 'pointer',\n    backgroundColor: 'lightblue',\n    overflow: \"hidden\",\n    maxHeight: 0\n  },\n  content_show: {\n    cursor: 'pointer',\n    backgroundColor: 'lightblue',\n    marginBottom: 10,\n    marginTop: 10,\n    padding: 30,\n    opacity: 1,\n    maxHeight: 9999,\n    transition: 'opacity 1s linear'\n  }\n});\nexport default Protocols;","map":{"version":3,"names":["React","useState","getList","Protocols","protocolList","key","Protocol","content","state","setState","onReceive","prevState","selected","setSelected","toogle","i","flex","styles","container","map","item","itemText","content_show","contentHide","StyleSheet","create","backgroundColor","header","flexDirection","padding","fontSize","fontWeight","color","cursor","overflow","maxHeight","marginBottom","marginTop","opacity","transition"],"sources":["/home/cipher73/Desktop/Sd Project/DFMPC-Student-Placement-System/project/Screens/Protocols.js"],"sourcesContent":["import React, {  useState } from 'react';\nimport {\n  StyleSheet,\n  SafeAreaView,\n  Text,\n  View,\n  TouchableOpacity,\n  ScrollView,\n} from 'react-native';\nimport {getList} from './ListApi'\n\nconst Protocols =\n()=>{\n   \n  const[state,setState]=useState({protocolList: [{key:0,Protocol:\"\",content:\"\"}]})\n  \n  \n  const onReceive = (protocolList) => {\n   \n    setState(prevState => ({\n      protocolList: prevState.protocolList = protocolList,\n      \n    }));\n  }\n  getList(onReceive)\n\n    \n  const[selected,setSelected]=useState(null)\n\n  const toogle=i=>{\n    if(selected==i){\n      return setSelected(null)\n    }\n    setSelected(i)\n  }\n\n    return (\n  \n      <SafeAreaView style={{flex:1}}>\n        <View style ={styles.container}>\n          \n          <ScrollView style ={styles.container} >\n              {\n                state.protocolList.map((item,key)=>(\n                \n                  <View>\n                  <TouchableOpacity style = {styles.item} onPress={()=>toogle(key)} >\n                   \n                    <Text style={styles.itemText}>\n                      {item.Protocol}\n                    </Text>\n            \n                    <image src={selected===key?'./Images/minus.png':'./Images/plus.png'}></image>\n                  </TouchableOpacity>\n                  <View style={selected===key? styles.content_show:styles.contentHide}>\n                      <Text>{item.content}</Text>\n                  </View>\n                </View>\n\n                )\n\n                )\n              }\n          </ScrollView>\n        </View>\n\n\n      </SafeAreaView>  \n       )\n  }\n  \n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor:'cream',\n  },\n  header:{\n  flexDirection:'row',\n  padding:10,\n  },\n  item:{\n    backgroundColor:'cream',\n    padding:20,\n  },\n  itemText:{\n    fontSize: 16,\n    fontWeight:'500',\n    color:'darkblue'\n\n\n  },\n  contentHide: {\n    cursor: 'pointer',\n    backgroundColor: 'lightblue',\n    overflow: \"hidden\",\n    maxHeight: 0\n\n  },\n  content_show:{\n    cursor:'pointer',\n    backgroundColor:'lightblue',\n    marginBottom:10,\n    marginTop:10,\n    padding:30,\n    opacity: 1,\n    maxHeight:9999,\n    transition:'opacity 1s linear'\n\n  }\n});\nexport default Protocols;"],"mappings":"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"},"metadata":{},"sourceType":"module"}