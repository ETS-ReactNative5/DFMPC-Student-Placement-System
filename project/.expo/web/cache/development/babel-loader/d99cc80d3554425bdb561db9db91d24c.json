{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { firebase } from \"../firebase\";\nimport { useNavigation } from '@react-navigation/core';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  function showAlert(title, message) {\n    Alert.alert(title, message, [{\n      text: \"Cancel\",\n      style: \"cancel\"\n    }], {\n      cancelable: true\n    });\n  }\n\n  var LoginFirebase = function LoginFirebase() {\n    var found = false;\n    firebase.database().ref('/users').on('value', function (snapshot) {\n      var key = snapshot.forEach(function (data) {\n        var check_email = snapshot.child(data.key + \"/email\").val();\n        var encrypted = snapshot.child(data.key + \"/password_digest\").val();\n\n        if (check_email === email) {\n          found = true;\n\n          if (encrypted === password) {\n            navigation.navigate(\"Dashboard\");\n          } else {\n            showAlert(\"Password Error\", \"Your email and password do not match\");\n          }\n        }\n      });\n\n      if (found === false) {\n        showAlert(\"Email Error\", \"user does not exist\");\n      }\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.inputStyle,\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Enter password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsx(View, {\n      style: styles.btnStyle,\n      children: _jsx(TouchableOpacity, {\n        onPress: LoginFirebase,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      })\n    })]\n  });\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputStyle: {\n    width: \"70%\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    padding: 10,\n    borderRadius: 15,\n    marginTop: 10\n  },\n  btnStyle: {\n    width: \"50%\",\n    backgroundColor: \"white\",\n    marginTop: 50,\n    borderColor: \"lightblue\",\n    borderWidth: 2,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: \"blue\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  btn: {\n    marginTop: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'green'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","firebase","useNavigation","Login","email","setEmail","password","setPassword","navigation","showAlert","title","message","Alert","alert","text","style","cancelable","LoginFirebase","found","database","ref","on","snapshot","key","forEach","data","check_email","child","val","encrypted","navigate","styles","container","inputStyle","input","btnStyle","buttonText","StyleSheet","create","flex","justifyContent","alignItems","width","backgroundColor","padding","borderRadius","marginTop","borderColor","borderWidth","color","fontSize","fontWeight","btn","paddingVertical","paddingHorizontal","elevation"],"sources":["/home/cipher73/Desktop/Sd Project/DFMPC-Student-Placement-System/project/Screens/Login.js"],"sourcesContent":["import React, { useState ,useEffect} from 'react'\nimport {Platform,Keyboard, TouchableWithoutFeedback,TouchableOpacity,KeyboardAvoidingView,StyleSheet, Text,Button, TextInput, View,Alert } from 'react-native'\nimport {firebase} from \"../firebase\"\nimport {useNavigation} from '@react-navigation/core'\n\n\nconst Login = () => {\n\n\n    const [email,setEmail]= useState('')\n    const [password,setPassword]= useState('')\n    const navigation =useNavigation()\n\n\n\n    function showAlert(title, message) {\n  Alert.alert(\n    title,\n    message,\n    [\n      {\n        text: \"Cancel\",\n       // onPress: () => Alert.alert(\"Cancel Pressed\"),\n        style: \"cancel\",\n      },\n    ],\n    {\n      cancelable: true,\n     \n    }\n  );\n    }\n    const LoginFirebase =() =>{\n        // login with email and password\n\n        // check if email exists in the database if so then hash pass and compare \n\n        var found = false\n        firebase.database().ref('/users').on('value',snapshot=>{\n            //if(snapshot.val()==email)\n               const key = snapshot.forEach(function(data) {\n     \n                const check_email =snapshot.child(data.key+\"/email\").val();\n             \n                const encrypted = snapshot.child(data.key+\"/password_digest\").val();\n\n               if(check_email===email){\n                   found =true\n              \n              \n                    if(encrypted===password){\n                        navigation.navigate(\"Dashboard\")\n                    }\n                    else{\n                        showAlert(\"Password Error\",\"Your email and password do not match\")\n                    }\n                }              \n            });\n           if(found===false){\n            showAlert(\"Email Error\",\"user does not exist\")\n           }\n        })\n      }\n      // this allows you to switch between different screens\n\n  return (\n\n      //TouchableWithoutFeedback - when i click anywhen outside od the keyboard, the keyboard will disappear\n\n    //<TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n    <KeyboardAvoidingView \n    style={styles.container}\n     // needs fixing // when keyboard appers things move up a bit \n      >   \n         \n     <View style={styles.inputStyle}>\n         <TextInput\n             placeholder=\"Enter email\"\n             value={email}\n             onChangeText={text => setEmail(text)}   //  set email to what the text is\n             style={styles.input}>\n         </TextInput>\n         <TextInput\n             placeholder=\"Enter password\"\n             value={password}\n             onChangeText={text => setPassword(text)} // set password to what the text is\n             style={styles.input}\n             secureTextEntry>\n\n         </TextInput>\n     </View>\n\n     <View style={styles.btnStyle}>\n        <TouchableOpacity\n            onPress={LoginFirebase}   // when user clicks on login button \n            >\n            <Text style={styles.buttonText}>Login</Text>\n\n        </TouchableOpacity>\n    </View>\n  \n\n    </KeyboardAvoidingView>\n   // </TouchableWithoutFeedback>\n  )\n}\n\nexport default Login\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent:'center',\n        alignItems:'center',\n    },\n\ninputStyle:{\nwidth: \"70%\"\n\n},\ninput:{\n    backgroundColor:\"white\",\n    padding:10,\n    borderRadius:15,\n    marginTop:10,\n},\nbtnStyle:{\n    width:\"50%\",\n    backgroundColor:\"white\",\n    marginTop:50,\n    borderColor:\"lightblue\",\n    borderWidth:2,\n    borderRadius:10,\n    alignItems:'center'\n},\n\nbuttonText:{\ncolor:\"blue\",\nfontSize:16,\nfontWeight:\"bold\",\n},       \nbtn:{\n    marginTop:50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'green',\n}\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}