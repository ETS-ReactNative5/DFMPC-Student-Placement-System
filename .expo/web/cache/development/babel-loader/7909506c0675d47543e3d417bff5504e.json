{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { firebase } from \"../firebase\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AVATAR_SIZE = 70;\nvar ICON_SIZE = 80;\nvar SPACING = 20;\nvar image = {\n  uri: \"https://reactjs.org/logo-og.png\"\n};\n\nvar Login = function Login() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  function showAlert(title, message) {\n    Alert.alert(title, message, [{\n      text: \"Cancel\",\n      style: \"cancel\"\n    }], {\n      cancelable: true\n    });\n  }\n\n  var LoginFirebase = function LoginFirebase() {\n    var found = false;\n    firebase.database().ref(\"/users\").on(\"value\", function (snapshot) {\n      var key = snapshot.forEach(function (data) {\n        var check_email = snapshot.child(data.key + \"/email\").val();\n        var encrypted = snapshot.child(data.key + \"/password_digest\").val();\n\n        if (check_email === email) {\n          found = true;\n\n          if (encrypted === password) {\n            navigation.navigate(\"Dashboard\");\n          } else {\n            showAlert(\"Password Error\", \"Your email and password do not match\");\n          }\n        }\n      });\n\n      if (found === false) {\n        showAlert(\"Email Error\", \"user does not exist\");\n      }\n    });\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: styles.imageView,\n      children: _jsx(Image, {\n        source: item.image,\n        style: {\n          width: AVATAR_SIZE,\n          height: AVATAR_SIZE,\n          borderRadius: AVATAR_SIZE,\n          marginRight: SPACING / 2\n        }\n      })\n    })\n  });\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(30,55,108,1)\"\n  },\n  imageView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/callu/Documents/DFMPC/DFMPC-Student-Placement-System/Screens/Login.js"],"names":["React","useState","useEffect","firebase","useNavigation","LinearGradient","AVATAR_SIZE","ICON_SIZE","SPACING","image","uri","Login","email","setEmail","password","setPassword","navigation","showAlert","title","message","Alert","alert","text","style","cancelable","LoginFirebase","found","database","ref","on","snapshot","key","forEach","data","check_email","child","val","encrypted","navigate","styles","container","imageView","item","width","height","borderRadius","marginRight","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Platform,\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  TouchableHighlight,\r\n  StyleSheet,\r\n  Text,\r\n  Button,\r\n  TextInput,\r\n  View,\r\n  Alert,\r\n  Image,\r\n} from \"react-native\";\r\nimport { firebase } from \"../firebase\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\n\r\n\r\nconst AVATAR_SIZE = 70;\r\nconst ICON_SIZE = 80;\r\nconst SPACING = 20;\r\nconst image = { uri: \"https://reactjs.org/logo-og.png\" };\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigation = useNavigation();\r\n\r\n  function showAlert(title, message) {\r\n    Alert.alert(\r\n      title,\r\n      message,\r\n      [\r\n        {\r\n          text: \"Cancel\",\r\n          // onPress: () => Alert.alert(\"Cancel Pressed\"),\r\n          style: \"cancel\",\r\n        },\r\n      ],\r\n      {\r\n        cancelable: true,\r\n      }\r\n    );\r\n  }\r\n  const LoginFirebase = () => {\r\n    // login with email and password\r\n\r\n    // check if email exists in the database if so then hash pass and compare\r\n\r\n    var found = false;\r\n    firebase\r\n      .database()\r\n      .ref(\"/users\")\r\n      .on(\"value\", (snapshot) => {\r\n        //if(snapshot.val()==email)\r\n        const key = snapshot.forEach(function (data) {\r\n          const check_email = snapshot.child(data.key + \"/email\").val();\r\n\r\n          const encrypted = snapshot.child(data.key + \"/password_digest\").val();\r\n\r\n          if (check_email === email) {\r\n            found = true;\r\n\r\n            if (encrypted === password) {\r\n              navigation.navigate(\"Dashboard\");\r\n            } else {\r\n              showAlert(\r\n                \"Password Error\",\r\n                \"Your email and password do not match\"\r\n              );\r\n            }\r\n          }\r\n        });\r\n        if (found === false) {\r\n          showAlert(\"Email Error\", \"user does not exist\");\r\n        }\r\n      });\r\n  };\r\n  // this allows you to switch between different screens\r\n\r\n  return (\r\n    //TouchableWithoutFeedback - when i click anywhen outside od the keyboard, the keyboard will disappear\r\n\r\n    //<TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n    <KeyboardAvoidingView\r\n      style={styles.container}\r\n      // needs fixing // when keyboard appers things move up a bit\r\n    >\r\n      <View style={styles.imageView}>\r\n       <Image source={item.image}\r\n        style={{width:AVATAR_SIZE,height:AVATAR_SIZE,borderRadius:AVATAR_SIZE\r\n        ,marginRight:SPACING/2,\r\n        }}\r\n        >\r\n        </Image>\r\n      </View>\r\n      \r\n    </KeyboardAvoidingView>\r\n    // </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(30,55,108,1)\"\r\n  },\r\n  imageView:{\r\n    flex:1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  }\r\n\r\n  \r\n});\r\n"]},"metadata":{},"sourceType":"module"}