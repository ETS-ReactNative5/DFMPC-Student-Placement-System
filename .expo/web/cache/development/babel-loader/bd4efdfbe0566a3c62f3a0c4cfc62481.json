{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { firebase } from \"../firebase\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  function showAlert(title, message) {\n    Alert.alert(title, message, [{\n      text: \"Cancel\",\n      style: \"cancel\"\n    }], {\n      cancelable: true\n    });\n  }\n\n  var LoginFirebase = function LoginFirebase() {\n    var found = false;\n    firebase.database().ref(\"/users\").on(\"value\", function (snapshot) {\n      var key = snapshot.forEach(function (data) {\n        var check_email = snapshot.child(data.key + \"/email\").val();\n        var encrypted = snapshot.child(data.key + \"/password_digest\").val();\n\n        if (check_email === email) {\n          found = true;\n\n          if (encrypted === password) {\n            navigation.navigate(\"Dashboard\");\n          } else {\n            showAlert(\"Password Error\", \"Your email and password do not match\");\n          }\n        }\n      });\n\n      if (found === false) {\n        showAlert(\"Email Error\", \"user does not exist\");\n      }\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.SPSStyle,\n      children: \"Student Placement System\"\n    }), _jsxs(View, {\n      style: styles.inputStyle,\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Enter password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsx(View, {\n      style: styles.btnStyle,\n      children: _jsx(TouchableOpacity, {\n        onPress: LoginFirebase,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      })\n    })]\n  });\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  inputStyle: {\n    width: \"60%\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    padding: 10,\n    borderRadius: 15,\n    marginTop: 10\n  },\n  btnStyle: {\n    width: \"30%\",\n    backgroundColor: \"white\",\n    marginTop: 50,\n    borderColor: \"lightblue\",\n    borderWidth: 2,\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  SPSStyle: {\n    backgroundColor: \"grey\",\n    marginTop: 50,\n    borderColor: \"black\",\n    borderWidth: 2,\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"black\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  btn: {\n    marginTop: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: \"green\"\n  }\n});","map":{"version":3,"sources":["C:/Users/callu/Documents/DFMPC/DFMPC-Student-Placement-System/Screens/Login.js"],"names":["React","useState","useEffect","firebase","useNavigation","Login","email","setEmail","password","setPassword","navigation","showAlert","title","message","Alert","alert","text","style","cancelable","LoginFirebase","found","database","ref","on","snapshot","key","forEach","data","check_email","child","val","encrypted","navigate","styles","container","SPSStyle","inputStyle","input","btnStyle","buttonText","StyleSheet","create","flex","justifyContent","alignItems","width","backgroundColor","padding","borderRadius","marginTop","borderColor","borderWidth","color","fontSize","fontWeight","btn","paddingVertical","paddingHorizontal","elevation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Platform,\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  StyleSheet,\r\n  Text,\r\n  Button,\r\n  TextInput,\r\n  View,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { firebase } from \"../firebase\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigation = useNavigation();\r\n\r\n  function showAlert(title, message) {\r\n    Alert.alert(\r\n      title,\r\n      message,\r\n      [\r\n        {\r\n          text: \"Cancel\",\r\n          // onPress: () => Alert.alert(\"Cancel Pressed\"),\r\n          style: \"cancel\",\r\n        },\r\n      ],\r\n      {\r\n        cancelable: true,\r\n      }\r\n    );\r\n  }\r\n  const LoginFirebase = () => {\r\n    // login with email and password\r\n\r\n    // check if email exists in the database if so then hash pass and compare\r\n\r\n    var found = false;\r\n    firebase\r\n      .database()\r\n      .ref(\"/users\")\r\n      .on(\"value\", (snapshot) => {\r\n        //if(snapshot.val()==email)\r\n        const key = snapshot.forEach(function (data) {\r\n          const check_email = snapshot.child(data.key + \"/email\").val();\r\n\r\n          const encrypted = snapshot.child(data.key + \"/password_digest\").val();\r\n\r\n          if (check_email === email) {\r\n            found = true;\r\n\r\n            if (encrypted === password) {\r\n              navigation.navigate(\"Dashboard\");\r\n            } else {\r\n              showAlert(\r\n                \"Password Error\",\r\n                \"Your email and password do not match\"\r\n              );\r\n            }\r\n          }\r\n        });\r\n        if (found === false) {\r\n          showAlert(\"Email Error\", \"user does not exist\");\r\n        }\r\n      });\r\n  };\r\n  // this allows you to switch between different screens\r\n\r\n  return (\r\n    //TouchableWithoutFeedback - when i click anywhen outside od the keyboard, the keyboard will disappear\r\n\r\n    //<TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n    <KeyboardAvoidingView\r\n      style={styles.container}\r\n      // needs fixing // when keyboard appers things move up a bit\r\n    >\r\n      <Text style={styles.SPSStyle}>Student Placement System</Text>\r\n      <View style={styles.inputStyle}>\r\n        <TextInput\r\n          placeholder=\"Enter email\"\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)} //  set email to what the text is\r\n          style={styles.input}\r\n        ></TextInput>\r\n        <TextInput\r\n          placeholder=\"Enter password\"\r\n          value={password}\r\n          onChangeText={(text) => setPassword(text)} // set password to what the text is\r\n          style={styles.input}\r\n          secureTextEntry\r\n        ></TextInput>\r\n      </View>\r\n\r\n      <View style={styles.btnStyle}>\r\n        <TouchableOpacity\r\n          onPress={LoginFirebase} // when user clicks on login button\r\n        >\r\n          <Text style={styles.buttonText}>Login</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n    // </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  inputStyle: {\r\n    width: \"60%\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    borderRadius: 15,\r\n    marginTop: 10,\r\n  },\r\n  btnStyle: {\r\n    width: \"30%\",\r\n    backgroundColor: \"white\",\r\n    marginTop: 50,\r\n    borderColor: \"lightblue\",\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  SPSStyle: {\r\n    backgroundColor: \"grey\",\r\n    marginTop: 50,\r\n    borderColor: \"black\",\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  buttonText: {\r\n    color: \"black\",\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  btn: {\r\n    marginTop: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 32,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n    backgroundColor: \"green\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}