{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../firebase\";\nimport { useNavigation } from '@react-navigation/core';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var LoginFirebase = function LoginFirebase() {\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var change = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.navigate(\"Dashboard\");\n      }\n    });\n    return change;\n  }, []);\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: (\"padding\", \"height\"),\n    children: [_jsxs(View, {\n      style: styles.inputStyle,\n      children: [_jsx(TextInput, {\n        placeholder: \"enter email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"enter password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsx(View, {\n      style: styles.btnStyle,\n      children: _jsx(TouchableOpacity, {\n        onPress: LoginFirebase,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      })\n    })]\n  });\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputStyle: {\n    width: \"70%\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    padding: 10,\n    borderRadius: 15,\n    marginTop: 10\n  },\n  btnStyle: {\n    width: \"50%\",\n    backgroundColor: \"white\",\n    marginTop: 50,\n    borderColor: \"lightblue\",\n    borderWidth: 2,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: \"blue\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Peace/Desktop/YOS3/SEMESTER 1/Software Design III/2022/Software Design Project/SPS-Project/DFMPC-Student-Placement-System/Project/Screens/Login.js"],"names":["React","useState","useEffect","auth","useNavigation","Login","email","setEmail","password","setPassword","LoginFirebase","signInWithEmailAndPassword","then","userCredentials","user","console","log","catch","error","alert","message","navigation","change","onAuthStateChanged","navigate","styles","container","inputStyle","text","input","btnStyle","buttonText","StyleSheet","create","flex","justifyContent","alignItems","width","backgroundColor","padding","borderRadius","marginTop","borderColor","borderWidth","color","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect} from 'react'\r\nimport {Platform,Keyboard, TouchableWithoutFeedback,TouchableOpacity,KeyboardAvoidingView,StyleSheet, Text, TextInput, View } from 'react-native'\r\nimport {auth} from \"../firebase\"\r\nimport {useNavigation} from '@react-navigation/core'\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [email,setEmail]= useState('')\r\n    const [password,setPassword]= useState('')\r\n    \r\n    const LoginFirebase =() =>{\r\n        // login with email and password\r\n        auth.signInWithEmailAndPassword(email,password).then(userCredentials =>{\r\n            const user =userCredentials.user;\r\n            console.log(user.email);\r\n        }).catch(error => alert(error.message));\r\n      }\r\n      \r\n\r\n\r\n      // this allows you to switch between different screens\r\nconst navigation =useNavigation()\r\n\r\nuseEffect(()=> {\r\n    // user is the firebase user\r\n    const change = auth.onAuthStateChanged(user =>{\r\n        // if user has succ then the dashboard appears\r\n        if(user){navigation.navigate(\"Dashboard\")}\r\n    })\r\n    return change\r\n},[])\r\n\r\n  return (\r\n\r\n      //TouchableWithoutFeedback - when i click anywhen outside od the keyboard, the keyboard will disappear\r\n\r\n    //<TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n    <KeyboardAvoidingView \r\n    style={styles.container}\r\n     // needs fixing // when keyboard appers things move up a bit\r\n    behavior={\"padding\",\"height\"} >   \r\n         \r\n     <View style={styles.inputStyle}>\r\n         <TextInput\r\n             placeholder=\"enter email\"\r\n             value={email}\r\n             onChangeText={text => setEmail(text)}   //  set email to what the text is\r\n             style={styles.input}>\r\n         </TextInput>\r\n         <TextInput\r\n             placeholder=\"enter password\"\r\n             value={password}\r\n             onChangeText={text => setPassword(text)} // set password to what the text is\r\n             style={styles.input}\r\n             secureTextEntry>\r\n\r\n         </TextInput>\r\n     </View>\r\n\r\n    <View style={styles.btnStyle}>\r\n        <TouchableOpacity\r\n            onPress={LoginFirebase}   // when user clicks on login button \r\n            >\r\n\r\n            <Text style={styles.buttonText}>Login</Text>\r\n\r\n        </TouchableOpacity>\r\n    </View>\r\n    \r\n    </KeyboardAvoidingView>\r\n   // </TouchableWithoutFeedback>\r\n  )\r\n}\r\n\r\nexport default Login\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n    },\r\n\r\ninputStyle:{\r\nwidth: \"70%\"\r\n\r\n},\r\ninput:{\r\n    backgroundColor:\"white\",\r\n    padding:10,\r\n    borderRadius:15,\r\n    marginTop:10,\r\n},\r\nbtnStyle:{\r\n    width:\"50%\",\r\n    backgroundColor:\"white\",\r\n    marginTop:50,\r\n    borderColor:\"lightblue\",\r\n    borderWidth:2,\r\n    borderRadius:10,\r\n    alignItems:'center'\r\n},\r\n\r\nbuttonText:{\r\ncolor:\"blue\",\r\nfontSize:16,\r\nfontWeight:\"bold\",\r\n},       \r\n\r\n})"]},"metadata":{},"sourceType":"module"}