{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Calendar, CalendarList, Agenda } from 'react-native-calendars';\nimport studentData from \"../dfmpc-student-placement-system.json\";\nimport AppContext from \"../AppContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar buttonHeight = 50;\nvar textPos = buttonHeight / 2;\nvar SPACING = 20;\nvar AVATAR_SIZE = 70;\nvar ICON_SIZE = 80;\nvar days = \"\";\nvar RANGE = 12;\nvar initialDate = '2022-01-02';\n\nvar CalendarView = function CalendarView() {\n  var myContext = useContext(AppContext);\n\n  var _useState = useState(initialDate),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      SetName = _useState4[1];\n\n  var scheduleList = studentData.schedules;\n  console.log('Schedule List', scheduleList);\n\n  var onDayPress = function onDayPress(day) {\n    setSelected(day.dateString);\n  };\n\n  return _jsx(CalendarList, {\n    current: initialDate,\n    pastScrollRange: 3,\n    futureScrollRange: RANGE,\n    theme: theme,\n    onDayPress: onDayPress,\n    markingType: \"period\",\n    markedDates: generateSchedule(scheduleList)\n  });\n};\n\nvar generateSchedule = function generateSchedule(scheduleList) {\n  var schedulesObj = {};\n  scheduleList.forEach(function (schedule) {\n    var scheduleObj = {};\n    var week = getDateFromWeekNum(schedule.week_no, 2022, schedule.specialty_duration);\n    var daysInWeek = getDaysInWeek(week.startDate, schedule.specialty_duration);\n    daysInWeek.forEach(function (day, dayIndex) {\n      scheduleObj = {};\n\n      if (dayIndex === 0) {\n        scheduleObj.startingDate = true;\n        scheduleObj.color = '#50cebb';\n        scheduleObj.textColor = 'white';\n      } else if (dayIndex > 0 && dayIndex <= 5) {\n        scheduleObj.color = '#70d7c7';\n        scheduleObj.textColor = 'white';\n      } else {\n        scheduleObj.endingDay = true;\n        scheduleObj.color = '#50cebb';\n        scheduleObj.textColor = 'white';\n      }\n\n      schedulesObj[day] = scheduleObj;\n    });\n  });\n  console.log('SchedulesObj', schedulesObj);\n  return schedulesObj;\n};\n\nvar getDaysInWeek = function getDaysInWeek(startDate, specialtyduration) {\n  var dates = [];\n  console.log(startDate);\n\n  for (var i = 0; i < specialtyduration; i++) {\n    var currentDate = new Date(startDate);\n    currentDate.setDate(startDate.getDate() + i);\n    var formattedDate = currentDate.toISOString().split('T')[0];\n    dates.push(formattedDate);\n  }\n\n  console.log('DatesList', dates);\n  return dates;\n};\n\nvar getDateFromWeekNum = function getDateFromWeekNum(weekNum, year, specialtyduration) {\n  var d = new Date(year, 0, 2);\n\n  if (weekNum * 7 + d.getDate() < 30) {\n    month = (weekNum * 7 + d.getDate) / 30;\n  }\n\n  var endDate = new Date(d.setDate(d.getDate() + weekNum * 7 - 1));\n  endDate.setMonth = month;\n  console.log(endDate);\n  var startDate = new Date(year, 0, 2);\n  startDate.setDate(endDate.getDate() - specialtyduration);\n  console.log(startDate, endDate);\n  return {\n    startDate: startDate,\n    endDate: endDate\n  };\n};\n\nvar getStudentSchedule = function getStudentSchedule(scheduleList, studentId) {};\n\nvar theme = {\n  'stylesheet.calendar.header': {\n    dayHeader: {\n      fontWeight: '600',\n      color: '#48BFE3'\n    }\n  },\n  'stylesheet.day.basic': {\n    today: {\n      borderColor: '#48BFE3',\n      borderWidth: 0.8\n    },\n    todayText: {\n      color: '#5390D9',\n      fontWeight: '800'\n    }\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 20,\n    backgroundColor: 'white',\n    marginTop: 10,\n    borderRadius: 20,\n    flex: 1,\n    borderColor: \"rgba(36,50,61,1)\",\n    borderWidth: 5\n  }\n});\nexport default CalendarView;\nexport { days };","map":{"version":3,"sources":["C:/Users/callu/Documents/DFMPC/DFMPC-Student-Placement-System/Screens/CalendarView.js"],"names":["React","useState","useEffect","useContext","Calendar","CalendarList","Agenda","studentData","AppContext","buttonHeight","textPos","SPACING","AVATAR_SIZE","ICON_SIZE","days","RANGE","initialDate","CalendarView","myContext","selected","setSelected","name","SetName","scheduleList","schedules","console","log","onDayPress","day","dateString","theme","generateSchedule","schedulesObj","forEach","schedule","scheduleObj","week","getDateFromWeekNum","week_no","specialty_duration","daysInWeek","getDaysInWeek","startDate","dayIndex","startingDate","color","textColor","endingDay","specialtyduration","dates","i","currentDate","Date","setDate","getDate","formattedDate","toISOString","split","push","weekNum","year","d","month","endDate","setMonth","getStudentSchedule","studentId","dayHeader","fontWeight","today","borderColor","borderWidth","todayText","styles","StyleSheet","create","container","marginTop","backgroundColor","borderRadius","flex"],"mappings":"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","sourcesContent":["import React,  { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableHighlight,\r\n  Image,\r\n  FlatList\r\n} from 'react-native';\r\n\r\nimport {Calendar,CalendarList,Agenda} from 'react-native-calendars';\r\nimport studentData from '../dfmpc-student-placement-system.json'\r\nimport AppContext from '../AppContext';\r\n\r\nconst buttonHeight=50;\r\nconst textPos=buttonHeight/2;\r\nconst SPACING = 20;\r\nconst AVATAR_SIZE = 70;\r\nconst ICON_SIZE = 80;\r\nvar days=\"\"\r\nconst RANGE = 12;\r\nconst initialDate = '2022-01-02'\r\n// const initialDate = new Date().toISOString().split('T')[0];\r\n\r\n\r\n\r\n\r\nconst CalendarView = () => {\r\n  const myContext = useContext(AppContext);\r\n  // const [selectedId, setSelectedId] = useState(null);\r\n  const [selected, setSelected] = useState(initialDate);\r\n  const [name, SetName] = useState('');\r\n  // const navigation = useNavigation()\r\n  const scheduleList = studentData.schedules;\r\n  console.log('Schedule List', scheduleList)\r\n  const onDayPress = day => {\r\n    setSelected(day.dateString);\r\n  };\r\n\r\n  // const markedDates = {\r\n  //   [selected]: {\r\n  //     selected: true,\r\n  //     disableTouchEvent: true,\r\n  //     selectedColor: '#5E60CE',\r\n  //     selectedTextColor: 'white'\r\n  //   }\r\n  // };\r\n  // const setwords = ({word}) => {\r\n  //   words=word\r\n  // }\r\n\r\n  \r\n\r\n  return (\r\n    <CalendarList\r\n      // testID={testIDs.calendarList.CONTAINER}\r\n      current={initialDate}\r\n      pastScrollRange={3}\r\n      futureScrollRange={RANGE}\r\n      // renderHeader={renderCustomHeader}\r\n      theme={theme}\r\n      onDayPress={onDayPress}\r\n      // markedDates={markedDates}\r\n      markingType=\"period\"\r\n      markedDates={generateSchedule(scheduleList)}\r\n    />\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\nconst generateSchedule = (scheduleList) => {\r\n  let schedulesObj = {}\r\n  scheduleList.forEach((schedule) => {\r\n\r\n    let scheduleObj = {}\r\n\r\n    const week = getDateFromWeekNum(schedule.week_no,2022,schedule.specialty_duration);\r\n\r\n    const daysInWeek = getDaysInWeek(week.startDate,schedule.specialty_duration);\r\n\r\n    daysInWeek.forEach((day, dayIndex) => {\r\n\r\n      scheduleObj = {};\r\n      if (dayIndex === 0) {\r\n        scheduleObj.startingDate = true;\r\n        scheduleObj.color = '#50cebb';\r\n        scheduleObj.textColor = 'white';\r\n      } else if (dayIndex > 0 && dayIndex <= 5) {\r\n        scheduleObj.color = '#70d7c7';\r\n        scheduleObj.textColor = 'white';\r\n      } else {\r\n        scheduleObj.endingDay = true;\r\n        scheduleObj.color = '#50cebb';\r\n        scheduleObj.textColor = 'white';\r\n      }\r\n\r\n      // Object.assign(schedulesObj, scheduleObj);\r\n      schedulesObj[day] = scheduleObj;\r\n\r\n    }) // end of days i week\r\n    \r\n  }) // End of Schedule List\r\n\r\n  console.log('SchedulesObj', schedulesObj)\r\n  return schedulesObj;\r\n}\r\n\r\nconst getDaysInWeek = (startDate,specialtyduration) => {\r\n\r\n  let dates = [];\r\n  // console.log('startDate', startDate) \r\n console.log(startDate)\r\n  for (let i = 0; i < specialtyduration; i++) {\r\n\r\n    const currentDate = new Date(startDate);\r\n    currentDate.setDate(startDate.getDate() + i);\r\n    const formattedDate = currentDate.toISOString().split('T')[0];\r\n\r\n    dates.push(formattedDate);\r\n  }\r\n  console.log('DatesList', dates);\r\n  return dates;\r\n  \r\n}\r\n\r\nconst getDateFromWeekNum = (weekNum, year,specialtyduration) => {\r\n  var d = new Date(year, 0, 2);\r\n  if(weekNum*7+d.getDate()<30){\r\n    month=(weekNum*7+d.getDate)/30\r\n  }\r\n  const endDate = new Date(d.setDate(d.getDate() + (weekNum * 7) - 1));\r\n  endDate.setMonth=month;\r\n  console.log(endDate)\r\n  const startDate = new Date(year, 0, 2);\r\n  startDate.setDate(endDate.getDate() - specialtyduration);\r\n  console.log(startDate,endDate)\r\n  return({startDate: startDate,endDate: endDate});\r\n  \r\n}\r\n\r\nconst getStudentSchedule = (scheduleList, studentId) => {\r\n\r\n}\r\n\r\nconst theme = {\r\n  'stylesheet.calendar.header': {\r\n    dayHeader: {\r\n      fontWeight: '600',\r\n      color: '#48BFE3'\r\n    }\r\n  },\r\n  'stylesheet.day.basic': {\r\n    today: {\r\n      borderColor: '#48BFE3',\r\n      borderWidth: 0.8\r\n    },\r\n    todayText: {\r\n      color: '#5390D9',\r\n      fontWeight: '800'\r\n    }\r\n  }\r\n};\r\n    \r\n  \r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop:20,\r\n    backgroundColor: 'white',\r\n    marginTop: 10,\r\n    borderRadius:20,\r\n    flex:1,\r\n    borderColor:\"rgba(36,50,61,1)\",\r\n    borderWidth:5\r\n  },\r\n});\r\nexport default CalendarView;\r\nexport {days};\r\n"]},"metadata":{},"sourceType":"module"}