{"ast":null,"code":"import React, { useState } from \"react\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport MapView from \"react-native-maps\";\nimport { Marker } from 'react-native-maps';\nimport GetLocation from 'react-native-get-location';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Separator = function Separator() {\n  return _jsx(View, {\n    style: styles.separator\n  });\n};\n\nvar PanicButton = function PanicButton() {\n  var navigation = useNavigation();\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      children: _jsx(Button, {\n        title: \"Protocols\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Protocols\");\n        }\n      })\n    }), _jsx(Separator, {}), _jsx(View, {\n      children: _jsx(Button, {\n        title: \"Press me\",\n        color: \"#f194ff\",\n        onPress: function onPress() {\n          return Alert.alert(\"Button with adjusted color pressed\");\n        }\n      })\n    }), _jsx(Separator, {}), _jsx(View, {\n      children: _jsx(View, {\n        style: styles.fixToText,\n        children: _jsx(Button, {\n          title: \"Record Emergency\",\n          onPress: function onPress() {\n            return navigation.navigate(\"VoiceRecorder\");\n          }\n        })\n      })\n    }), _jsx(Separator, {}), _jsxs(View, {\n      style: styles.MapStyle,\n      children: [_jsx(MapView, {\n        style: styles.map,\n        region: {\n          latitude: -35,\n          longitude: 35,\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421\n        }\n      }), _jsx(Marker, {\n        coordinate: {\n          latitude: -35,\n          longitude: 35\n        },\n        image: require(\"./images/pin.png\")\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 50,\n    flex: 1,\n    justifyContent: \"center\",\n    marginHorizontal: 16\n  },\n  title: {\n    textAlign: \"center\",\n    marginVertical: 8\n  },\n  fixToText: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: \"#737373\",\n    borderBottomWidth: StyleSheet.hairlineWidth\n  },\n  map: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n  },\n  MapStyle: {\n    flex: 1,\n    margin: 20,\n    marginBottom: 90,\n    justifyContent: \"center\"\n  }\n});\nexport default PanicButton;","map":{"version":3,"names":["React","useState","requireNativeComponent","useNavigation","MapView","Marker","GetLocation","Separator","styles","separator","PanicButton","navigation","container","navigate","Alert","alert","fixToText","MapStyle","map","latitude","longitude","latitudeDelta","longitudeDelta","require","StyleSheet","create","marginTop","flex","justifyContent","marginHorizontal","title","textAlign","marginVertical","flexDirection","borderBottomColor","borderBottomWidth","hairlineWidth","position","top","left","bottom","right","margin","marginBottom"],"sources":["/home/cipher73/Desktop/Project/DFMPC-Student-Placement-System/Screens/PanicButton.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  requireNativeComponent,\n  StyleSheet,\n  Button,\n  View,\n  SafeAreaView,\n  Text,\n  Alert,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport MapView from \"react-native-maps\";\nimport { Marker } from 'react-native-maps';\nimport GetLocation from 'react-native-get-location'\nconst Separator = () => <View style={styles.separator} />;\n\nconst PanicButton = () => {\n\n  const navigation = useNavigation()\n  \n  return (\n    <SafeAreaView style={styles.container}>\n      <View>\n        <Button\n          title=\"Protocols\"\n          onPress={() => navigation.navigate(\"Protocols\")}\n        />\n      </View>\n      <Separator />\n      <View>\n        <Button\n          title=\"Press me\"\n          color=\"#f194ff\"\n          onPress={() => Alert.alert(\"Button with adjusted color pressed\")}\n        />\n      </View>\n      <Separator />\n\n      <View>\n        <View style={styles.fixToText}>\n          <Button\n            title=\"Record Emergency\"\n            onPress={() => navigation.navigate(\"VoiceRecorder\")}\n          />\n        </View>\n      </View>\n      <Separator />\n      <View style={styles.MapStyle}>\n        <MapView\n          style={styles.map}\n          region={{\n            latitude: -35,\n            longitude: 35,\n            latitudeDelta: 0.0922,\n            longitudeDelta: 0.0421,\n          }}\n        ></MapView>\n        <Marker\n          coordinate={{ latitude:-35, longitude: 35 }}\n          image={require(\"./images/pin.png\")}\n        />\n      </View>\n    </SafeAreaView>\n  );\n        }\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 50,\n    flex: 1,\n    justifyContent: \"center\",\n    marginHorizontal: 16,\n  },\n  title: {\n    textAlign: \"center\",\n    marginVertical: 8,\n  },\n  fixToText: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: \"#737373\",\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n  map: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n  },\n  MapStyle: {\n    flex: 1,\n    margin: 20,\n    marginBottom: 90,\n\n    justifyContent: \"center\",\n  },\n});\n\nexport default PanicButton;\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;SAEEC,sB;;;;;;;AAQF,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY;EAAA,OAAM,KAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC;EAApB,EAAN;AAAA,CAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;EAExB,IAAMC,UAAU,GAAGR,aAAa,EAAhC;EAEA,OACE,MAAC,YAAD;IAAc,KAAK,EAAEK,MAAM,CAACI,SAA5B;IAAA,WACE,KAAC,IAAD;MAAA,UACE,KAAC,MAAD;QACE,KAAK,EAAC,WADR;QAEE,OAAO,EAAE;UAAA,OAAMD,UAAU,CAACE,QAAX,CAAoB,WAApB,CAAN;QAAA;MAFX;IADF,EADF,EAOE,KAAC,SAAD,KAPF,EAQE,KAAC,IAAD;MAAA,UACE,KAAC,MAAD;QACE,KAAK,EAAC,UADR;QAEE,KAAK,EAAC,SAFR;QAGE,OAAO,EAAE;UAAA,OAAMC,KAAK,CAACC,KAAN,CAAY,oCAAZ,CAAN;QAAA;MAHX;IADF,EARF,EAeE,KAAC,SAAD,KAfF,EAiBE,KAAC,IAAD;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAEP,MAAM,CAACQ,SAApB;QAAA,UACE,KAAC,MAAD;UACE,KAAK,EAAC,kBADR;UAEE,OAAO,EAAE;YAAA,OAAML,UAAU,CAACE,QAAX,CAAoB,eAApB,CAAN;UAAA;QAFX;MADF;IADF,EAjBF,EAyBE,KAAC,SAAD,KAzBF,EA0BE,MAAC,IAAD;MAAM,KAAK,EAAEL,MAAM,CAACS,QAApB;MAAA,WACE,KAAC,OAAD;QACE,KAAK,EAAET,MAAM,CAACU,GADhB;QAEE,MAAM,EAAE;UACNC,QAAQ,EAAE,CAAC,EADL;UAENC,SAAS,EAAE,EAFL;UAGNC,aAAa,EAAE,MAHT;UAINC,cAAc,EAAE;QAJV;MAFV,EADF,EAUE,KAAC,MAAD;QACE,UAAU,EAAE;UAAEH,QAAQ,EAAC,CAAC,EAAZ;UAAgBC,SAAS,EAAE;QAA3B,CADd;QAEE,KAAK,EAAEG,OAAO;MAFhB,EAVF;IAAA,EA1BF;EAAA,EADF;AA4CO,CAhDT;;AAkDA,IAAMf,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;EAC/Bb,SAAS,EAAE;IACTc,SAAS,EAAE,EADF;IAETC,IAAI,EAAE,CAFG;IAGTC,cAAc,EAAE,QAHP;IAITC,gBAAgB,EAAE;EAJT,CADoB;EAO/BC,KAAK,EAAE;IACLC,SAAS,EAAE,QADN;IAELC,cAAc,EAAE;EAFX,CAPwB;EAW/BhB,SAAS,EAAE;IACTiB,aAAa,EAAE,KADN;IAETL,cAAc,EAAE;EAFP,CAXoB;EAe/BnB,SAAS,EAAE;IACTuB,cAAc,EAAE,CADP;IAETE,iBAAiB,EAAE,SAFV;IAGTC,iBAAiB,EAAEX,UAAU,CAACY;EAHrB,CAfoB;EAoB/BlB,GAAG,EAAE;IACHmB,QAAQ,EAAE,UADP;IAEHC,GAAG,EAAE,CAFF;IAGHC,IAAI,EAAE,CAHH;IAIHC,MAAM,EAAE,CAJL;IAKHC,KAAK,EAAE;EALJ,CApB0B;EA2B/BxB,QAAQ,EAAE;IACRU,IAAI,EAAE,CADE;IAERe,MAAM,EAAE,EAFA;IAGRC,YAAY,EAAE,EAHN;IAKRf,cAAc,EAAE;EALR;AA3BqB,CAAlB,CAAf;AAoCA,eAAelB,WAAf"},"metadata":{},"sourceType":"module"}