{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { firebase } from \"../firebase\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AVATAR_SIZE = 70;\nvar ICON_SIZE = 80;\nvar SPACING = 20;\nvar image = {\n  uri: \"https://reactjs.org/logo-og.png\"\n};\n\nvar Login = function Login() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  function showAlert(title, message) {\n    Alert.alert(title, message, [{\n      text: \"Cancel\",\n      style: \"cancel\"\n    }], {\n      cancelable: true\n    });\n  }\n\n  var LoginFirebase = function LoginFirebase() {\n    var found = false;\n    firebase.database().ref(\"/users\").on(\"value\", function (snapshot) {\n      var key = snapshot.forEach(function (data) {\n        var check_email = snapshot.child(data.key + \"/email\").val();\n        var encrypted = snapshot.child(data.key + \"/password_digest\").val();\n\n        if (check_email === email) {\n          found = true;\n\n          if (encrypted === password) {\n            navigation.navigate(\"Dashboard\");\n          } else {\n            showAlert(\"Password Error\", \"Your email and password do not match\");\n          }\n        }\n      });\n\n      if (found === false) {\n        showAlert(\"Email Error\", \"user does not exist\");\n      }\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      children: _jsx(Image, {\n        source: {\n          uri: \"https://www.wits.ac.za/media/wits-university/news-and-events/images/logos-and-icons/Wits-Logo-Mono-Neg-Legal-600x300.png\"\n        },\n        style: {\n          width: 300,\n          height: 150,\n          marginTop: 300\n        }\n      })\n    }), _jsxs(View, {\n      style: styles.inputStyle,\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Enter password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsx(View, {\n      style: {\n        width: \"75%\",\n        flex: 1\n      },\n      children: _jsx(LinearGradient, {\n        colors: ['rgba(30,55,108,1)', ' rgba(30,55,108,1)', 'rgba(30,55,108,1)'],\n        style: styles.linearGradient,\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            navigation.navigate(\"Dashboard\");\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Login\"\n          })\n        })\n      })\n    })]\n  });\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  inputStyle: {\n    width: \"60%\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    padding: 10,\n    borderRadius: 15,\n    marginTop: 10\n  },\n  btnStyle: {\n    width: \"30%\",\n    backgroundColor: \"white\",\n    marginTop: 50,\n    borderColor: \"lightblue\",\n    borderWidth: 2,\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  SPSStyle: {\n    backgroundColor: \"grey\",\n    marginTop: 50,\n    borderColor: \"black\",\n    borderWidth: 2,\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"black\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  btn: {\n    marginTop: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: \"green\"\n  },\n  linearGradient: {\n    height: 30,\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderRadius: 5,\n    paddingTop: 0\n  },\n  buttonText: {\n    fontSize: 20,\n    fontWeight: '700',\n    textAlign: 'center',\n    color: \"white\",\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"sources":["C:/Users/callu/Documents/DFMPC/DFMPC-Student-Placement-System/Screens/Login.js"],"names":["React","useState","useEffect","firebase","useNavigation","LinearGradient","AVATAR_SIZE","ICON_SIZE","SPACING","image","uri","Login","email","setEmail","password","setPassword","navigation","showAlert","title","message","Alert","alert","text","style","cancelable","LoginFirebase","found","database","ref","on","snapshot","key","forEach","data","check_email","child","val","encrypted","navigate","styles","container","width","height","marginTop","inputStyle","input","flex","linearGradient","buttonText","StyleSheet","create","justifyContent","alignItems","backgroundColor","padding","borderRadius","btnStyle","borderColor","borderWidth","SPSStyle","color","fontSize","fontWeight","btn","paddingVertical","paddingHorizontal","elevation","paddingLeft","paddingRight","paddingTop","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Platform,\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  TouchableHighlight,\r\n  StyleSheet,\r\n  Text,\r\n  Button,\r\n  TextInput,\r\n  View,\r\n  Alert,\r\n  Image,\r\n} from \"react-native\";\r\nimport { firebase } from \"../firebase\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\n\r\n\r\n\r\nconst AVATAR_SIZE = 70;\r\nconst ICON_SIZE = 80;\r\nconst SPACING = 20;\r\nconst image = { uri: \"https://reactjs.org/logo-og.png\" };\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigation = useNavigation();\r\n\r\n  function showAlert(title, message) {\r\n    Alert.alert(\r\n      title,\r\n      message,\r\n      [\r\n        {\r\n          text: \"Cancel\",\r\n          // onPress: () => Alert.alert(\"Cancel Pressed\"),\r\n          style: \"cancel\",\r\n        },\r\n      ],\r\n      {\r\n        cancelable: true,\r\n      }\r\n    );\r\n  }\r\n  const LoginFirebase = () => {\r\n    // login with email and password\r\n\r\n    // check if email exists in the database if so then hash pass and compare\r\n\r\n    var found = false;\r\n    firebase\r\n      .database()\r\n      .ref(\"/users\")\r\n      .on(\"value\", (snapshot) => {\r\n        //if(snapshot.val()==email)\r\n        const key = snapshot.forEach(function (data) {\r\n          const check_email = snapshot.child(data.key + \"/email\").val();\r\n\r\n          const encrypted = snapshot.child(data.key + \"/password_digest\").val();\r\n\r\n          if (check_email === email) {\r\n            found = true;\r\n\r\n            if (encrypted === password) {\r\n              navigation.navigate(\"Dashboard\");\r\n            } else {\r\n              showAlert(\r\n                \"Password Error\",\r\n                \"Your email and password do not match\"\r\n              );\r\n            }\r\n          }\r\n        });\r\n        if (found === false) {\r\n          showAlert(\"Email Error\", \"user does not exist\");\r\n        }\r\n      });\r\n  };\r\n  // this allows you to switch between different screens\r\n\r\n  return (\r\n    //TouchableWithoutFeedback - when i click anywhen outside od the keyboard, the keyboard will disappear\r\n\r\n    //<TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n    <KeyboardAvoidingView\r\n    style={styles.container}\r\n    // needs fixing // when keyboard appers things move up a bit\r\n  >\r\n    <View>\r\n    <Image source={{uri: \"https://www.wits.ac.za/media/wits-university/news-and-events/images/logos-and-icons/Wits-Logo-Mono-Neg-Legal-600x300.png\"}}\r\n      style={{width:300,height:150,marginTop:300\r\n      }}\r\n      >\r\n      </Image>\r\n    </View>\r\n    <View style={styles.inputStyle}>\r\n      <TextInput\r\n        placeholder=\"Enter email\"\r\n        value={email}\r\n        onChangeText={(text) => setEmail(text)} //  set email to what the text is\r\n        style={styles.input}\r\n      ></TextInput>\r\n      <TextInput\r\n        placeholder=\"Enter password\"\r\n        value={password}\r\n        onChangeText={(text) => setPassword(text)} // set password to what the text is\r\n        style={styles.input}\r\n        secureTextEntry\r\n      ></TextInput>\r\n    </View>\r\n    <View style={{width:\"75%\",flex:1}}>\r\n    <LinearGradient colors={['rgba(30,55,108,1)', ' rgba(30,55,108,1)', 'rgba(30,55,108,1)']} style={styles.linearGradient}>\r\n    <TouchableOpacity\r\n          onPress={()=>{navigation.navigate(\"Dashboard\")}}   // when user clicks on login button \r\n          >\r\n          <Text style={styles.buttonText}>Login</Text>\r\n\r\n      </TouchableOpacity> \r\n  </LinearGradient>\r\n    </View>\r\n  </KeyboardAvoidingView>\r\n  // </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\n\r\nexport default Login;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  inputStyle: {\r\n    width: \"60%\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    borderRadius: 15,\r\n    marginTop: 10,\r\n  },\r\n  btnStyle: {\r\n    width: \"30%\",\r\n    backgroundColor: \"white\",\r\n    marginTop: 50,\r\n    borderColor: \"lightblue\",\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  SPSStyle: {\r\n    backgroundColor: \"grey\",\r\n    marginTop: 50,\r\n    borderColor: \"black\",\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  buttonText: {\r\n    color: \"black\",\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  btn: {\r\n    marginTop: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 32,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n    backgroundColor: \"green\",\r\n  },\r\n  linearGradient: {\r\n    height: 30,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    borderRadius: 5,\r\n    paddingTop: 0\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    fontWeight:'700',\r\n    textAlign: 'center',\r\n    color:\"white\",\r\n    backgroundColor: 'transparent',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}