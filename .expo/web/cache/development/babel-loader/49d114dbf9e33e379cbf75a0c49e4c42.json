{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport CalendarPicker from 'react-native-calendar-picker';\nimport { useNavigation } from '@react-navigation/core';\nimport { Calendar, CalendarList, Agenda } from 'react-native-calendars';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar buttonHeight = 50;\nvar textPos = buttonHeight / 2;\nvar SPACING = 20;\nvar AVATAR_SIZE = 70;\nvar ICON_SIZE = 80;\n\nvar CalendarView = function (_Component) {\n  _inherits(CalendarView, _Component);\n\n  var _super = _createSuper(CalendarView);\n\n  function CalendarView(props) {\n    var _this;\n\n    _classCallCheck(this, CalendarView);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      selectedStartDate: null,\n      selectedEndDate: null\n    };\n    _this.onDateChange = _this.onDateChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CalendarView, [{\n    key: \"onDateChange\",\n    value: function onDateChange(date, type) {\n      if (type === 'END_DATE') {\n        this.setState({\n          selectedEndDate: date\n        });\n      } else {\n        this.setState({\n          selectedStartDate: date,\n          selectedEndDate: null\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedStartDate = _this$state.selectedStartDate,\n          selectedEndDate = _this$state.selectedEndDate;\n      var minDate = new Date();\n      var maxDate = new Date(2050, 6, 3);\n      var startDate = selectedStartDate ? selectedStartDate.toString() : '';\n      var endDate = selectedEndDate ? selectedEndDate.toString() : '';\n      return _jsx(Calendar, {\n        style: {\n          borderWidth: 1,\n          borderColor: 'gray',\n          height: 350\n        },\n        theme: {\n          backgroundColor: '#ffffff',\n          calendarBackground: '#ffffff',\n          textSectionTitleColor: '#b6c1cd',\n          textSectionTitleDisabledColor: '#d9e1e8',\n          selectedDayBackgroundColor: '#00adf5',\n          selectedDayTextColor: '#ffffff',\n          todayTextColor: '#00adf5',\n          dayTextColor: '#2d4150',\n          textDisabledColor: '#d9e1e8',\n          dotColor: '#00adf5',\n          selectedDotColor: '#ffffff',\n          arrowColor: 'orange',\n          disabledArrowColor: '#d9e1e8',\n          monthTextColor: 'blue',\n          indicatorColor: 'blue',\n          textDayFontFamily: 'monospace',\n          textMonthFontFamily: 'monospace',\n          textDayHeaderFontFamily: 'monospace',\n          textDayFontWeight: '300',\n          textMonthFontWeight: 'bold',\n          textDayHeaderFontWeight: '300',\n          textDayFontSize: 16,\n          textMonthFontSize: 16,\n          textDayHeaderFontSize: 16\n        }\n      });\n    }\n  }]);\n\n  return CalendarView;\n}(Component);\n\nexport { CalendarView as default };\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 20,\n    backgroundColor: 'white',\n    marginTop: 10,\n    borderRadius: 20,\n    flex: 1,\n    borderColor: \"rgba(36,50,61,1)\",\n    borderWidth: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/callu/Documents/DFMPC/DFMPC-Student-Placement-System/Screens/CalendarView.js"],"names":["React","Component","CalendarPicker","useNavigation","Calendar","CalendarList","Agenda","buttonHeight","textPos","SPACING","AVATAR_SIZE","ICON_SIZE","CalendarView","props","state","selectedStartDate","selectedEndDate","onDateChange","bind","date","type","setState","minDate","Date","maxDate","startDate","toString","endDate","borderWidth","borderColor","height","backgroundColor","calendarBackground","textSectionTitleColor","textSectionTitleDisabledColor","selectedDayBackgroundColor","selectedDayTextColor","todayTextColor","dayTextColor","textDisabledColor","dotColor","selectedDotColor","arrowColor","disabledArrowColor","monthTextColor","indicatorColor","textDayFontFamily","textMonthFontFamily","textDayHeaderFontFamily","textDayFontWeight","textMonthFontWeight","textDayHeaderFontWeight","textDayFontSize","textMonthFontSize","textDayHeaderFontSize","styles","StyleSheet","create","container","marginTop","borderRadius","flex"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAQA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,SAAQC,QAAR,EAAiBC,YAAjB,EAA8BC,MAA9B,QAA2C,wBAA3C;;AAEA,IAAMC,YAAY,GAAC,EAAnB;AACA,IAAMC,OAAO,GAACD,YAAY,GAAC,CAA3B;AACA,IAAME,OAAO,GAAG,EAAhB;AACA,IAAMC,WAAW,GAAG,EAApB;AACA,IAAMC,SAAS,GAAG,EAAlB;;IAEqBC,Y;;;;;AAEnB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAEjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE,IADR;AAEXC,MAAAA,eAAe,EAAE;AAFN,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AAPiB;AAQlB;;;;WAED,sBAAaC,IAAb,EAAmBC,IAAnB,EAAyB;AACvB,UAAIA,IAAI,KAAK,UAAb,EAAyB;AACvB,aAAKC,QAAL,CAAc;AACZL,UAAAA,eAAe,EAAEG;AADL,SAAd;AAGD,OAJD,MAIO;AACL,aAAKE,QAAL,CAAc;AACZN,UAAAA,iBAAiB,EAAEI,IADP;AAEZH,UAAAA,eAAe,EAAE;AAFL,SAAd;AAID;AACF;;;WAED,kBAAS;AAEP,wBAA+C,KAAKF,KAApD;AAAA,UAAQC,iBAAR,eAAQA,iBAAR;AAAA,UAA2BC,eAA3B,eAA2BA,eAA3B;AACA,UAAMM,OAAO,GAAG,IAAIC,IAAJ,EAAhB;AACA,UAAMC,OAAO,GAAG,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAhB;AACA,UAAME,SAAS,GAAKV,iBAAiB,GAAGA,iBAAiB,CAACW,QAAlB,EAAH,GAAkC,EAAvE;AACA,UAAMC,OAAO,GAAGX,eAAe,GAAGA,eAAe,CAACU,QAAhB,EAAH,GAAgC,EAA/D;AAEA,aAEE,KAAC,QAAD;AAEJ,QAAA,KAAK,EAAE;AACLE,UAAAA,WAAW,EAAE,CADR;AAELC,UAAAA,WAAW,EAAE,MAFR;AAGLC,UAAAA,MAAM,EAAE;AAHH,SAFH;AAQJ,QAAA,KAAK,EAAE;AACLC,UAAAA,eAAe,EAAE,SADZ;AAELC,UAAAA,kBAAkB,EAAE,SAFf;AAGLC,UAAAA,qBAAqB,EAAE,SAHlB;AAILC,UAAAA,6BAA6B,EAAE,SAJ1B;AAKLC,UAAAA,0BAA0B,EAAE,SALvB;AAMLC,UAAAA,oBAAoB,EAAE,SANjB;AAOLC,UAAAA,cAAc,EAAE,SAPX;AAQLC,UAAAA,YAAY,EAAE,SART;AASLC,UAAAA,iBAAiB,EAAE,SATd;AAULC,UAAAA,QAAQ,EAAE,SAVL;AAWLC,UAAAA,gBAAgB,EAAE,SAXb;AAYLC,UAAAA,UAAU,EAAE,QAZP;AAaLC,UAAAA,kBAAkB,EAAE,SAbf;AAcLC,UAAAA,cAAc,EAAE,MAdX;AAeLC,UAAAA,cAAc,EAAE,MAfX;AAgBLC,UAAAA,iBAAiB,EAAE,WAhBd;AAiBLC,UAAAA,mBAAmB,EAAE,WAjBhB;AAkBLC,UAAAA,uBAAuB,EAAE,WAlBpB;AAmBLC,UAAAA,iBAAiB,EAAE,KAnBd;AAoBLC,UAAAA,mBAAmB,EAAE,MApBhB;AAqBLC,UAAAA,uBAAuB,EAAE,KArBpB;AAsBLC,UAAAA,eAAe,EAAE,EAtBZ;AAuBLC,UAAAA,iBAAiB,EAAE,EAvBd;AAwBLC,UAAAA,qBAAqB,EAAE;AAxBlB;AARH,QAFF;AAwCD;;;;EAzEuCrD,S;;SAArBW,Y;AA8ErB,IAAM2C,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAC,EADD;AAET5B,IAAAA,eAAe,EAAE,OAFR;AAGT4B,IAAAA,SAAS,EAAE,EAHF;AAITC,IAAAA,YAAY,EAAC,EAJJ;AAKTC,IAAAA,IAAI,EAAC,CALI;AAMThC,IAAAA,WAAW,EAAC,kBANH;AAOTD,IAAAA,WAAW,EAAC;AAPH;AADoB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableHighlight,\r\n  Image\r\n} from 'react-native';\r\nimport CalendarPicker from 'react-native-calendar-picker';\r\nimport {useNavigation} from '@react-navigation/core'\r\nimport {Calendar,CalendarList,Agenda} from 'react-native-calendars';\r\n\r\nconst buttonHeight=50;\r\nconst textPos=buttonHeight/2;\r\nconst SPACING = 20;\r\nconst AVATAR_SIZE = 70;\r\nconst ICON_SIZE = 80;\r\n\r\nexport default class CalendarView extends Component {\r\n  \r\n  constructor(props) {\r\n    \r\n    super(props);\r\n    this.state = {\r\n      selectedStartDate: null,\r\n      selectedEndDate: null,\r\n    };\r\n    this.onDateChange = this.onDateChange.bind(this);\r\n  }\r\n\r\n  onDateChange(date, type) {\r\n    if (type === 'END_DATE') {\r\n      this.setState({\r\n        selectedEndDate: date,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        selectedStartDate: date,\r\n        selectedEndDate: null,\r\n      });\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    \r\n    const { selectedStartDate, selectedEndDate } = this.state;\r\n    const minDate = new Date(); // Today\r\n    const maxDate = new Date(2050, 6, 3);\r\n    const startDate  =  selectedStartDate ? selectedStartDate.toString() : '';\r\n    const endDate = selectedEndDate ? selectedEndDate.toString() : '';\r\n    \r\n    return (\r\n\r\n      <Calendar\r\n  // Specify style for calendar container element. Default = {}\r\n  style={{\r\n    borderWidth: 1,\r\n    borderColor: 'gray',\r\n    height: 350\r\n  }}\r\n  // Specify theme properties to override specific styles for calendar parts. Default = {}\r\n  theme={{\r\n    backgroundColor: '#ffffff',\r\n    calendarBackground: '#ffffff',\r\n    textSectionTitleColor: '#b6c1cd',\r\n    textSectionTitleDisabledColor: '#d9e1e8',\r\n    selectedDayBackgroundColor: '#00adf5',\r\n    selectedDayTextColor: '#ffffff',\r\n    todayTextColor: '#00adf5',\r\n    dayTextColor: '#2d4150',\r\n    textDisabledColor: '#d9e1e8',\r\n    dotColor: '#00adf5',\r\n    selectedDotColor: '#ffffff',\r\n    arrowColor: 'orange',\r\n    disabledArrowColor: '#d9e1e8',\r\n    monthTextColor: 'blue',\r\n    indicatorColor: 'blue',\r\n    textDayFontFamily: 'monospace',\r\n    textMonthFontFamily: 'monospace',\r\n    textDayHeaderFontFamily: 'monospace',\r\n    textDayFontWeight: '300',\r\n    textMonthFontWeight: 'bold',\r\n    textDayHeaderFontWeight: '300',\r\n    textDayFontSize: 16,\r\n    textMonthFontSize: 16,\r\n    textDayHeaderFontSize: 16\r\n  }}\r\n/>\r\n\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n    \r\n  \r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop:20,\r\n    backgroundColor: 'white',\r\n    marginTop: 10,\r\n    borderRadius:20,\r\n    flex:1,\r\n    borderColor:\"rgba(36,50,61,1)\",\r\n    borderWidth:5\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}