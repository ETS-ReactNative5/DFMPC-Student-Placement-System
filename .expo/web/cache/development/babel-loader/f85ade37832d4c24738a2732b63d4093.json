{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\nimport studentData from \"../dfmpc-student-placement-system.json\";\nimport AppContext from \"../AppContext\";\nimport \"../global.js\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport firestore from \"@react-native-firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar buttonHeight = 50;\nvar textPos = buttonHeight / 2;\nvar SPACING = 20;\nvar AVATAR_SIZE = 70;\nvar ICON_SIZE = 80;\nvar days = \"\";\nvar specialty = \"\";\nvar RANGE = 12;\nvar initialDate = \"2022-01-02\";\n\nvar CalendarView = function CalendarView() {\n  var navigation = useNavigation();\n  var myContext = useContext(AppContext);\n\n  var _useState = useState(initialDate),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedDate = _useState2[0],\n      setSelectedDate = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      SetName = _useState4[1];\n\n  var scheduleList = studentData.schedules;\n  console.log(\"User's Schedule List: \", scheduleList);\n\n  var onDayPress = function onDayPress(day) {\n    setSelectedDate(day.dateString);\n  };\n\n  return _jsx(CalendarList, {\n    current: initialDate,\n    pastScrollRange: 3,\n    futureScrollRange: RANGE,\n    theme: theme,\n    onDayPress: function onDayPress(day) {\n      console.log(\"Day\", day, \"selected\");\n      days = day.dateString;\n      console.log(\"Days =\", days);\n      navigation.navigate(\"DayAgenda\");\n    },\n    markingType: \"period\",\n    markedDates: generateSchedule(scheduleList)\n  });\n};\n\nvar generateSchedule = function generateSchedule(scheduleList) {\n  var schedulesObj = {};\n  scheduleList.forEach(function (schedule) {\n    var scheduleObj = {};\n    var week = getDateFromWeekNum(schedule.week_no, 2022, schedule.specialty_duration);\n    var daysInWeek = getDaysInWeek(week.startDate, schedule.specialty_duration);\n\n    if (schedule.student_id != parseInt(authUserID, 10) + 1) {\n      return {};\n    }\n\n    var startcolor = \"rgba(80,206,187,0.5)\";\n    var middlecolor = \"rgba(80,206,187,0.5)\";\n    var endcolor = \"rgba(80,206,187,0.5)\";\n\n    if (schedule.specialty_id == 2) {\n      startcolor = \"rgba(226,135,67,0.5)\";\n      middlecolor = \"rgba(226,135,67,0.5)\";\n      endcolor = \"rgba(226,135,67,0.5)\";\n    } else if (schedule.specialty_id == 5) {\n      startcolor = \"rgba(8,181,245,0.5)\";\n      middlecolor = \"rgba(8,181,245,0.5)\";\n      endcolor = \"rgba(8,181,245,0.5)\";\n    } else if (schedule.specialty_id == 6) {\n      startcolor = \"rgba(245,58,245,0.5)\";\n      middlecolor = \"rgba(245,58,245,0.5)\";\n      endcolor = \"rgba(245,58,245,0.5)\";\n    } else {\n      startcolor = \"rgba(80,206,187,0.5)\";\n      middlecolor = \"rgba(80,206,187,0.5)\";\n      endcolor = \"rgba(80,206,187,0.5)\";\n    }\n\n    daysInWeek.forEach(function (day, dayIndex) {\n      scheduleObj = {};\n\n      if (dayIndex === 0) {\n        scheduleObj.startingDate = true;\n        scheduleObj.color = startcolor;\n        scheduleObj.textColor = \"white\";\n      } else if (dayIndex > 0 && dayIndex <= 5) {\n        scheduleObj.color = middlecolor;\n        scheduleObj.textColor = \"white\";\n      } else {\n        scheduleObj.endingDay = true;\n        scheduleObj.color = endcolor;\n        scheduleObj.textColor = \"white\";\n      }\n\n      schedulesObj[day] = scheduleObj;\n    });\n  });\n  return schedulesObj;\n};\n\nvar getDaysInWeek = function getDaysInWeek(startDate, specialtyduration) {\n  var dates = [];\n  console.log(startDate);\n\n  for (var i = 0; i < specialtyduration; i++) {\n    var currentDate = new Date(startDate);\n    currentDate.setDate(startDate.getDate() + i);\n    var formattedDate = currentDate.toISOString().split(\"T\")[0];\n    dates.push(formattedDate);\n  }\n\n  console.log(\"DatesList\", dates);\n  return dates;\n};\n\nvar getDateFromWeekNum = function getDateFromWeekNum(weekNum, year, specialtyduration) {\n  var daynum = weekNum * 7;\n\n  if (weekNum * 7 > 30) {\n    var month = weekNum * 7 / 30 + 1;\n  } else {\n    var month = 0;\n  }\n\n  while (daynum > 30) {\n    daynum = daynum - 30;\n  }\n\n  month = parseInt(month);\n  var d = new Date(year, month, 1);\n  console.log(d);\n  var endDate = new Date(d.setDate(daynum));\n  var startDate = new Date(year, month, 2);\n  startDate.setDate(endDate.getDate() - specialtyduration);\n  console.log(startDate, endDate);\n  return {\n    startDate: startDate,\n    endDate: endDate\n  };\n};\n\nvar theme = {\n  \"stylesheet.calendar.header\": {\n    dayHeader: {\n      fontWeight: \"600\",\n      color: \"#48BFE3\"\n    }\n  },\n  \"stylesheet.day.basic\": {\n    today: {\n      borderColor: \"#48BFE3\",\n      borderWidth: 0.8\n    },\n    todayText: {\n      color: \"#5390D9\",\n      fontWeight: \"800\"\n    }\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 20,\n    backgroundColor: \"white\",\n    marginTop: 10,\n    borderRadius: 20,\n    flex: 1,\n    borderColor: \"rgba(36,50,61,1)\",\n    borderWidth: 5\n  }\n});\nexport default CalendarView;\nexport { days };","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigation","Calendar","CalendarList","Agenda","studentData","AppContext","NavigationContainer","firestore","buttonHeight","textPos","SPACING","AVATAR_SIZE","ICON_SIZE","days","specialty","RANGE","initialDate","CalendarView","navigation","myContext","selectedDate","setSelectedDate","name","SetName","scheduleList","schedules","console","log","onDayPress","day","dateString","theme","navigate","generateSchedule","schedulesObj","forEach","schedule","scheduleObj","week","getDateFromWeekNum","week_no","specialty_duration","daysInWeek","getDaysInWeek","startDate","student_id","parseInt","authUserID","startcolor","middlecolor","endcolor","specialty_id","dayIndex","startingDate","color","textColor","endingDay","specialtyduration","dates","i","currentDate","Date","setDate","getDate","formattedDate","toISOString","split","push","weekNum","year","daynum","month","d","endDate","dayHeader","fontWeight","today","borderColor","borderWidth","todayText","styles","StyleSheet","create","container","marginTop","backgroundColor","borderRadius","flex"],"sources":["C:/DFMPC/DFMPC-Student-Placement-System/Screens/CalendarView.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableHighlight,\r\n  Image,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport { Calendar, CalendarList, Agenda } from \"react-native-calendars\";\r\nimport studentData from \"../dfmpc-student-placement-system.json\";\r\nimport AppContext from \"../AppContext\";\r\nimport \"../global.js\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport firestore from \"@react-native-firebase/firestore\";\r\n\r\n//constants\r\nconst buttonHeight = 50;\r\nconst textPos = buttonHeight / 2;\r\nconst SPACING = 20;\r\nconst AVATAR_SIZE = 70;\r\nconst ICON_SIZE = 80;\r\nvar days = \"\";\r\nvar specialty = \"\";\r\nconst RANGE = 12;\r\nconst initialDate = \"2022-01-02\";\r\n\r\nconst CalendarView = () => {\r\n  //use navigation\r\n  const navigation = useNavigation();\r\n  const myContext = useContext(AppContext);\r\n  // const [selectedDateId, setSelectedDateId] = useState(null);\r\n  // State pattern to represent the currently selected date.\r\n  const [selectedDate, setSelectedDate] = useState(initialDate);\r\n  // State pattern used to represent the authorized user's Name\r\n  const [name, SetName] = useState(\"\");\r\n  // const navigation = useNavigation()\r\n\r\n  //retrieve user details\r\n  const scheduleList = studentData.schedules;\r\n  console.log(\"User's Schedule List: \", scheduleList);\r\n  const onDayPress = (day) => {\r\n    // Set's selectedDate state to the selected date\r\n    setSelectedDate(day.dateString);\r\n  };\r\n\r\n  return (\r\n    //render calendar\r\n    <CalendarList\r\n      // testID={testIDs.calendarList.CONTAINER}\r\n      current={initialDate}\r\n      pastScrollRange={3}\r\n      futureScrollRange={RANGE}\r\n      // renderHeader={renderCustomHeader}\r\n      theme={theme}\r\n      // Sets onPress to navigate to that agenda and set selected date.\r\n      onDayPress={(day) => {\r\n        console.log(\"Day\", day, \"selected\");\r\n        days = day.dateString;\r\n        console.log(\"Days =\", days);\r\n\r\n        navigation.navigate(\"DayAgenda\");\r\n      }}\r\n      // markedDates={markedDates}\r\n      markingType=\"period\"\r\n      //get marked dates using generateschedule and user credentials\r\n      markedDates={generateSchedule(scheduleList)}\r\n    />\r\n  );\r\n};\r\n\r\n// generate marked dates\r\nconst generateSchedule = (scheduleList) => {\r\n  let schedulesObj = {};\r\n  scheduleList.forEach((schedule) => {\r\n    let scheduleObj = {};\r\n\r\n    //get the week for the schedule\r\n    const week = getDateFromWeekNum(\r\n      schedule.week_no,\r\n      2022,\r\n      schedule.specialty_duration\r\n    );\r\n\r\n    //figure out which days of the week in the schedule\r\n    const daysInWeek = getDaysInWeek(\r\n      week.startDate,\r\n      schedule.specialty_duration\r\n    );\r\n\r\n    //only show schedule for correct user\r\n    if (schedule.student_id != parseInt(authUserID, 10) + 1) {\r\n      return {};\r\n    }\r\n\r\n    //default colours\r\n    var startcolor = \"rgba(80,206,187,0.5)\";\r\n    var middlecolor = \"rgba(80,206,187,0.5)\";\r\n    var endcolor = \"rgba(80,206,187,0.5)\";\r\n\r\n    //change colour based on specialty\r\n    if (schedule.specialty_id == 2) {\r\n      startcolor = \"rgba(226,135,67,0.5)\";\r\n      middlecolor = \"rgba(226,135,67,0.5)\";\r\n      endcolor = \"rgba(226,135,67,0.5)\";\r\n    } else if (schedule.specialty_id == 5) {\r\n      startcolor = \"rgba(8,181,245,0.5)\";\r\n      middlecolor = \"rgba(8,181,245,0.5)\";\r\n      endcolor = \"rgba(8,181,245,0.5)\";\r\n    } else if (schedule.specialty_id == 6) {\r\n      startcolor = \"rgba(245,58,245,0.5)\";\r\n      middlecolor = \"rgba(245,58,245,0.5)\";\r\n      endcolor = \"rgba(245,58,245,0.5)\";\r\n    } else {\r\n      startcolor = \"rgba(80,206,187,0.5)\";\r\n      middlecolor = \"rgba(80,206,187,0.5)\";\r\n      endcolor = \"rgba(80,206,187,0.5)\";\r\n    }\r\n\r\n    // Iterates through each schedule object in a week\r\n    daysInWeek.forEach((day, dayIndex) => {\r\n      // Stores appropriate schedule item as scheduleObj\r\n      scheduleObj = {};\r\n      if (dayIndex === 0) {\r\n        scheduleObj.startingDate = true;\r\n        scheduleObj.color = startcolor;\r\n        scheduleObj.textColor = \"white\";\r\n      } else if (dayIndex > 0 && dayIndex <= 5) {\r\n        scheduleObj.color = middlecolor;\r\n        scheduleObj.textColor = \"white\";\r\n      } else {\r\n        scheduleObj.endingDay = true;\r\n        scheduleObj.color = endcolor;\r\n        scheduleObj.textColor = \"white\";\r\n      }\r\n\r\n      // Object.assign(schedulesObj, scheduleObj);\r\n      // Assigns the day's\r\n      schedulesObj[day] = scheduleObj;\r\n    }); // end of days i week\r\n  }); // End of Schedule List\r\n\r\n  return schedulesObj;\r\n};\r\n\r\n// get days that the specialty will run over using specialty duration\r\nconst getDaysInWeek = (startDate, specialtyduration) => {\r\n  let dates = [];\r\n  // console.log('startDate', startDate)\r\n  console.log(startDate);\r\n  for (let i = 0; i < specialtyduration; i++) {\r\n    //takes current date and counts days prior to it for listing on calendar\r\n    const currentDate = new Date(startDate);\r\n    currentDate.setDate(startDate.getDate() + i);\r\n    const formattedDate = currentDate.toISOString().split(\"T\")[0];\r\n\r\n    dates.push(formattedDate);\r\n  }\r\n  console.log(\"DatesList\", dates);\r\n  return dates;\r\n};\r\n\r\n// calculates correct week based on the weeknumber and specialty duration\r\nconst getDateFromWeekNum = (weekNum, year, specialtyduration) => {\r\n  var daynum = weekNum * 7;\r\n  if (weekNum * 7 > 30) {\r\n    var month = (weekNum * 7) / 30 + 1;\r\n  } else {\r\n    var month = 0;\r\n  }\r\n  while (daynum > 30) {\r\n    daynum = daynum - 30;\r\n  }\r\n  month = parseInt(month);\r\n  var d = new Date(year, month, 1);\r\n  console.log(d);\r\n  const endDate = new Date(d.setDate(daynum));\r\n  const startDate = new Date(year, month, 2);\r\n  startDate.setDate(endDate.getDate() - specialtyduration);\r\n  console.log(startDate, endDate);\r\n  return { startDate: startDate, endDate: endDate };\r\n};\r\n\r\nconst theme = {\r\n  \"stylesheet.calendar.header\": {\r\n    dayHeader: {\r\n      fontWeight: \"600\",\r\n      color: \"#48BFE3\",\r\n    },\r\n  },\r\n  \"stylesheet.day.basic\": {\r\n    today: {\r\n      borderColor: \"#48BFE3\",\r\n      borderWidth: 0.8,\r\n    },\r\n    todayText: {\r\n      color: \"#5390D9\",\r\n      fontWeight: \"800\",\r\n    },\r\n  },\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 20,\r\n    backgroundColor: \"white\",\r\n    marginTop: 10,\r\n    borderRadius: 20,\r\n    flex: 1,\r\n    borderColor: \"rgba(36,50,61,1)\",\r\n    borderWidth: 5,\r\n  },\r\n});\r\nexport default CalendarView;\r\n\r\nexport { days };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}