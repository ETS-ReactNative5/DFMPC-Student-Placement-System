{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar buttonHeight = 50;\nvar textPos = buttonHeight / 2;\nvar SPACING = 20;\nvar AVATAR_SIZE = 70;\nvar ICON_SIZE = 80;\nvar DATA = [{\n  id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f62',\n  title: 'Change Profile Photo',\n  text: \"TODO:, Update User' profile_photo url in Firebase.\"\n}, {\n  id: '2',\n  title: 'Change App Theme',\n  text: \"TODO:, Update User' profile_photo url in Firebase.\"\n}, {\n  id: '3',\n  title: 'Suggestions?',\n  text: \"TODO:, Update User' profile_photo url in Firebase.\"\n}];\n\nvar Settings = function Settings() {\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      SetName = _useState2[1];\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    var backgroundColor = item.id === selectedId ? \"#7fb4e1\" : \"#bcbcbc\";\n    var color = item.id === selectedId ? 'black' : 'black';\n    return _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        padding: SPACING,\n        backgroundColor: ' rgba(255,255,255,0.1)',\n        flex: 1,\n        borderRadius: 8,\n        marginBottom: SPACING,\n        shadowColor: \"rgba(0,0,0,1)\",\n        shadowOffset: {\n          width: 0,\n          height: 10\n        },\n        paddingTop: 10,\n        shadowOpacity: 1,\n        shadowRadius: 20\n      },\n      children: [_jsx(View, {\n        children: _jsx(Image, {\n          source: item.image,\n          style: {\n            width: AVATAR_SIZE,\n            height: AVATAR_SIZE,\n            borderRadius: AVATAR_SIZE,\n            marginRight: SPACING / 2\n          }\n        })\n      }), _jsx(View, {\n        style: {\n          width: \"75%\",\n          flex: 1\n        },\n        children: _jsx(LinearGradient, {\n          colors: ['rgba(30,55,108,1)', ' rgba(30,55,108,0.8)', 'rgba(30,55,108,1)'],\n          style: styles.linearGradient,\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              navigation.navigate(item.destination);\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: item.title\n            })\n          })\n        })\n      })]\n    });\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Image, {\n        style: {\n          width: ICON_SIZE,\n          height: ICON_SIZE,\n          position: 'absolute',\n          resizeMode: 'cover',\n          right: 0,\n          top: 10,\n          borderRadius: ICON_SIZE,\n          marginRight: SPACING / 2,\n          borderWidth: 0,\n          borderColor: \"rgba(0,0,0,1)\",\n          backgroundColor: \"rgba(255,255,255,1)\",\n          shadowOffset: {\n            height: 10,\n            shadowColor: 'black'\n          },\n          shadowOpacity: 1,\n          shadowRadius: 20\n        },\n        source: require(\"./bear.gif\")\n      }), _jsx(View, {\n        style: {\n          flex: 1,\n          backgroundColor: ' rgba(18,33,65,0.8)'\n        },\n        children: _jsx(FlatList, {\n          contentContainerStyle: {\n            padding: SPACING / 8,\n            paddingTop: SPACING\n          },\n          data: DATA,\n          renderItem: renderItem,\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          }\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(30,55,108,1)\"\n  },\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    marginTop: 1,\n    marginBottom: 1,\n    backgroundColor: \"rgba(18,33,65,0.8)\"\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25,\n    color: \"white\"\n  },\n  linearGradient: {\n    height: AVATAR_SIZE,\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderRadius: 5,\n    paddingTop: AVATAR_SIZE / 4\n  },\n  buttonText: {\n    fontSize: AVATAR_SIZE / 3,\n    fontWeight: '700',\n    textAlign: 'center',\n    color: ' rgba(128,163,198,0.8)',\n    backgroundColor: 'transparent'\n  }\n});\nexport default Settings;","map":{"version":3,"sources":["C:/Users/callu/Documents/DFMPC/DFMPC-Student-Placement-System/Screens/Settings.js"],"names":["React","useState","useNavigation","LinearGradient","buttonHeight","textPos","SPACING","AVATAR_SIZE","ICON_SIZE","DATA","id","title","text","Settings","navigation","name","SetName","renderItem","item","backgroundColor","selectedId","color","flexDirection","padding","flex","borderRadius","marginBottom","shadowColor","shadowOffset","width","height","paddingTop","shadowOpacity","shadowRadius","image","marginRight","styles","linearGradient","navigate","destination","buttonText","container","position","resizeMode","right","top","borderWidth","borderColor","require","StyleSheet","create","justifyContent","alignItems","button","paddingVertical","paddingHorizontal","elevation","marginTop","fontSize","lineHeight","fontWeight","letterSpacing","paddingLeft","paddingRight","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  Image,\r\n  Linking,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  TouchableHighlight\r\n} from \"react-native\";\r\nimport { Alert } from \"react-native\";\r\nimport {LinearGradient} from 'expo-linear-gradient';\r\n\r\nconst buttonHeight=50;\r\nconst textPos=buttonHeight/2;\r\nconst SPACING = 20;\r\nconst AVATAR_SIZE = 70;\r\nconst ICON_SIZE = 80;\r\n\r\nconst DATA=[\r\n  {\r\n    id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f62',\r\n    title: 'Change Profile Photo',\r\n    text: \"TODO:, Update User' profile_photo url in Firebase.\",\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Change App Theme',\r\n    text: \"TODO:, Update User' profile_photo url in Firebase.\",\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'Suggestions?',\r\n    text: \"TODO:, Update User' profile_photo url in Firebase.\",\r\n  },\r\n];\r\nconst Settings = () => {\r\n  const navigation = useNavigation();\r\n  const [name, SetName] = useState(\"\");\r\n  const renderItem = ({ item }) => {\r\n    const backgroundColor = item.id === selectedId ? \"#7fb4e1\" : \"#bcbcbc\";\r\n    const color = item.id === selectedId ? 'black' : 'black';\r\n    return (\r\n    <View style={{flexDirection: 'row',\r\n    padding:SPACING,\r\n    backgroundColor:' rgba(255,255,255,0.1)',\r\n    flex:1,\r\n    borderRadius:8,\r\n    marginBottom:SPACING,\r\n    shadowColor:\"rgba(0,0,0,1)\",\r\n    shadowOffset:{\r\n      width: 0,\r\n      height:10,\r\n    },\r\n    paddingTop:10,\r\n    shadowOpacity:1,\r\n    shadowRadius:20,\r\n    }}>\r\n       <View>\r\n        <Image source={item.image}\r\n        style={{width:AVATAR_SIZE,height:AVATAR_SIZE,borderRadius:AVATAR_SIZE\r\n        ,marginRight:SPACING/2,\r\n        }}\r\n        >\r\n        </Image>\r\n      </View>\r\n      <View style={{width:\"75%\",flex:1}}>\r\n      <LinearGradient colors={['rgba(30,55,108,1)', ' rgba(30,55,108,0.8)', 'rgba(30,55,108,1)']} style={styles.linearGradient}>\r\n      <TouchableOpacity\r\n            onPress={()=>{navigation.navigate(item.destination)}}   // when user clicks on login button \r\n            >\r\n            <Text style={styles.buttonText}>{item.title}</Text>\r\n\r\n        </TouchableOpacity> \r\n    </LinearGradient>\r\n      </View>\r\n      </View>\r\n    );\r\n    \r\n  };\r\n  return (\r\n    <>\r\n    <View style={styles.container}>\r\n      <Image \r\n       style={{width:ICON_SIZE,\r\n        height:ICON_SIZE,\r\n        position: 'absolute',\r\n        resizeMode: 'cover',\r\n                right: 0,\r\n                top: 10,\r\n        borderRadius:ICON_SIZE\r\n        ,marginRight:SPACING/2,\r\n        borderWidth:0,\r\n        borderColor:\"rgba(0,0,0,1)\",\r\n        backgroundColor:\"rgba(255,255,255,1)\",\r\n      shadowOffset:{\r\n      height:10,\r\n      shadowColor:'black'\r\n      },\r\n       shadowOpacity:1,\r\n      shadowRadius:20,\r\n        }}\r\n        source={require(\"./bear.gif\")}\r\n        />\r\n        <View style={{flex:1, backgroundColor:' rgba(18,33,65,0.8)'}}>\r\n      <FlatList contentContainerStyle={{\r\n        padding:SPACING/8,\r\n        paddingTop:SPACING,\r\n\r\n      }}\r\n        data={DATA}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item.id}\r\n      />\r\n    </View>\r\n        \r\n        \r\n        \r\n        </View>\r\n    \r\n      </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor:\"rgba(30,55,108,1)\"\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 32,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n    marginTop:1,\r\n    marginBottom:1,\r\n    backgroundColor: \"rgba(18,33,65,0.8)\",\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n    lineHeight: 21,\r\n    fontWeight: \"bold\",\r\n    letterSpacing: 0.25,\r\n    color: \"white\",\r\n  },\r\n  linearGradient: {\r\n    height: AVATAR_SIZE,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    borderRadius: 5,\r\n    paddingTop: AVATAR_SIZE/4,\r\n  },\r\n  buttonText: {\r\n    fontSize: AVATAR_SIZE/3,\r\n    fontWeight:'700',\r\n    textAlign: 'center',\r\n    color: ' rgba(128,163,198,0.8)',\r\n    backgroundColor: 'transparent',\r\n  },\r\n});\r\n\r\nexport default Settings;\r\n"]},"metadata":{},"sourceType":"module"}