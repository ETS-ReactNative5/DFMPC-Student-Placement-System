{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport \"./style.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nvar mic = new SpeechRecognition();\nmic.continuous = true;\nmic.interimResults = true;\nmic.lang = 'en-US';\n\nfunction VoiceRecorder() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isListening = _useState2[0],\n      setIsListening = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      note = _useState4[0],\n      setNote = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      savedNotes = _useState6[0],\n      setSavedNotes = _useState6[1];\n\n  useEffect(function () {\n    handleListen();\n  }, [isListening]);\n\n  var handleListen = function handleListen() {\n    if (isListening) {\n      mic.start();\n\n      mic.onend = function () {\n        console.log('continue..');\n        mic.start();\n      };\n    } else {\n      mic.stop();\n\n      mic.onend = function () {\n        console.log('Stopped Mic on Click');\n      };\n    }\n\n    mic.onstart = function () {\n      console.log('Mics on');\n    };\n\n    mic.onresult = function (event) {\n      var transcript = Array.from(event.results).map(function (result) {\n        return result[0];\n      }).map(function (result) {\n        return result.transcript;\n      }).join('');\n      console.log(transcript);\n      setNote(transcript);\n\n      mic.onerror = function (event) {\n        console.log(event.error);\n      };\n    };\n  };\n\n  var handleSaveNote = function handleSaveNote() {\n    setSavedNotes([].concat(_toConsumableArray(savedNotes), [note]));\n    setNote('');\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(\"h1\", {\n      children: \"Voice Notes\"\n    }), _jsxs(\"div\", {\n      className: \"container\",\n      children: [_jsxs(\"div\", {\n        className: \"box\",\n        children: [_jsx(\"h2\", {\n          children: \"Current Note\"\n        }), isListening ? _jsx(\"span\", {\n          children: \"\\uD83C\\uDF99\\uFE0F\"\n        }) : _jsx(\"span\", {\n          children: \"\\uD83D\\uDED1\\uD83C\\uDF99\\uFE0F\"\n        }), _jsx(\"button\", {\n          onClick: handleSaveNote,\n          disabled: !note,\n          children: \"Save Note\"\n        }), _jsx(\"button\", {\n          onClick: function onClick() {\n            return setIsListening(function (prevState) {\n              return !prevState;\n            });\n          },\n          children: \"Start/Stop\"\n        }), _jsx(\"p\", {\n          children: note\n        })]\n      }), _jsxs(\"div\", {\n        className: \"box\",\n        children: [_jsx(\"h2\", {\n          children: \"Notes\"\n        }), savedNotes.map(function (n) {\n          return _jsx(\"p\", {\n            children: n\n          }, n);\n        })]\n      })]\n    })]\n  });\n}\n\nexport default VoiceRecorder;","map":{"version":3,"names":["React","useState","useEffect","SpeechRecognition","window","webkitSpeechRecognition","mic","continuous","interimResults","lang","VoiceRecorder","isListening","setIsListening","note","setNote","savedNotes","setSavedNotes","handleListen","start","onend","console","log","stop","onstart","onresult","event","transcript","Array","from","results","map","result","join","onerror","error","handleSaveNote","prevState","n"],"sources":["/home/cipher73/Desktop/Project/DFMPC-Student-Placement-System/Screens/VoiceRecorder.js"],"sourcesContent":[" \n import React, { useState, useEffect } from 'react'\n import './style.css'\n \n const SpeechRecognition =\n   window.SpeechRecognition || window.webkitSpeechRecognition\n const mic = new SpeechRecognition()\n \n mic.continuous = true\n mic.interimResults = true\n mic.lang = 'en-US'\n \n function VoiceRecorder() {\n   const [isListening, setIsListening] = useState(false)\n   const [note, setNote] = useState(null)\n   const [savedNotes, setSavedNotes] = useState([])\n \n   useEffect(() => {\n     handleListen()\n   }, [isListening])\n \n   const handleListen = () => {\n     if (isListening) {\n       mic.start()\n       mic.onend = () => {\n         console.log('continue..')\n         mic.start()\n       }\n     } else {\n       mic.stop()\n       mic.onend = () => {\n         console.log('Stopped Mic on Click')\n       }\n     }\n     mic.onstart = () => {\n       console.log('Mics on')\n     }\n \n     mic.onresult = event => {\n       const transcript = Array.from(event.results)\n         .map(result => result[0])\n         .map(result => result.transcript)\n         .join('')\n       console.log(transcript)\n       setNote(transcript)\n       mic.onerror = event => {\n         console.log(event.error)\n       }\n     }\n   }\n \n   const handleSaveNote = () => {\n     setSavedNotes([...savedNotes, note])\n     setNote('')\n   }\n \n   return (\n     <>\n       <h1>Voice Notes</h1>\n       <div className=\"container\">\n         <div className=\"box\">\n           <h2>Current Note</h2>\n           {isListening ? <span>üéôÔ∏è</span> : <span>üõëüéôÔ∏è</span>}\n           <button onClick={handleSaveNote} disabled={!note}>\n             Save Note\n           </button>\n           <button onClick={() => setIsListening(prevState => !prevState)}>\n             Start/Stop\n           </button>\n           <p>{note}</p>\n         </div>\n         <div className=\"box\">\n           <h2>Notes</h2>\n           {savedNotes.map(n => (\n             <p key={n}>{n}</p>\n           ))}\n         </div>\n       </div>\n     </>\n   )\n }\n\n\n  export default VoiceRecorder"],"mappings":"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"},"metadata":{},"sourceType":"module"}