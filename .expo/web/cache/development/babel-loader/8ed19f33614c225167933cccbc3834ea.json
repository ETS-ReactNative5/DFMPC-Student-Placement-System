{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { getList } from \"./ListApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Protocols = function Protocols() {\n  var _useState = useState({\n    protocolList: [{\n      key: 0,\n      Protocol: \"\",\n      content: \"\"\n    }]\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var onReceive = function onReceive(protocolList) {\n    setState(function (prevState) {\n      return {\n        protocolList: prevState.protocolList = protocolList\n      };\n    });\n  };\n\n  getList(onReceive);\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var toogle = function toogle(i) {\n    if (selected == i) {\n      return setSelected(null);\n    }\n\n    setSelected(i);\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(ScrollView, {\n        style: styles.container,\n        children: state.protocolList.map(function (item, key) {\n          return _jsxs(View, {\n            children: [_jsxs(TouchableOpacity, {\n              style: styles.item,\n              onPress: function onPress() {\n                return toogle(key);\n              },\n              children: [_jsx(Text, {\n                style: styles.itemText,\n                children: item.Protocol\n              }), _jsx(Text, {\n                style: styles.itemText,\n                children: selected === key ? \"-\" : \"+\"\n              })]\n            }), _jsx(View, {\n              style: selected === key ? styles.content_show : styles.contentHide,\n              children: _jsx(Text, {\n                children: item.content\n              })\n            })]\n          });\n        })\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'rgba(18,33,65,1)'\n  },\n  header: {\n    flexDirection: 'row',\n    padding: 10\n  },\n  item: {\n    backgroundColor: 'rgba(18,33,65,1)',\n    padding: 20\n  },\n  itemText: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: 'darkblue'\n  },\n  contentHide: {\n    backgroundColor: 'lightblue',\n    overflow: \"hidden\",\n    maxHeight: 0\n  },\n  content_show: {\n    backgroundColor: 'lightblue',\n    marginBottom: 10,\n    marginTop: 10,\n    padding: 30,\n    opacity: 1,\n    maxHeight: 9999\n  }\n});\nexport default Protocols;","map":{"version":3,"sources":["C:/Users/callu/Documents/DFMPC/DFMPC-Student-Placement-System/Screens/Protocols.js"],"names":["React","useState","getList","Protocols","protocolList","key","Protocol","content","state","setState","onReceive","prevState","selected","setSelected","toogle","i","flex","styles","container","map","item","itemText","content_show","contentHide","StyleSheet","create","backgroundColor","header","flexDirection","padding","fontSize","fontWeight","color","overflow","maxHeight","marginBottom","marginTop","opacity"],"mappings":"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","sourcesContent":["import React, {  useState } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from 'react-native';\r\nimport {getList} from './ListApi'\r\n\r\nconst Protocols =\r\n()=>{\r\n   \r\n  const[state,setState]=useState({protocolList: [{key:0,Protocol:\"\",content:\"\"}]})\r\n  \r\n  \r\n  const onReceive = (protocolList) => {\r\n   \r\n    setState(prevState => ({\r\n      protocolList: prevState.protocolList = protocolList,\r\n      \r\n    }));\r\n  }\r\n  getList(onReceive)\r\n\r\n    \r\n  const[selected,setSelected]=useState(null)\r\n\r\n  const toogle=i=>{\r\n    if(selected==i){\r\n      return setSelected(null)\r\n    }\r\n    setSelected(i)\r\n  }\r\n\r\n    return (\r\n  \r\n      <SafeAreaView style={{flex:1}}>\r\n        <View style ={styles.container}>\r\n          \r\n          <ScrollView style ={styles.container} >\r\n              {\r\n                state.protocolList.map((item,key)=>(\r\n                \r\n                  <View>\r\n                  <TouchableOpacity style = {styles.item} onPress={()=>toogle(key)} >\r\n                   \r\n                    <Text style={styles.itemText}>\r\n                      {item.Protocol}\r\n                    </Text>\r\n                    <Text style={styles.itemText}>\r\n                      {selected===key?\"-\":\"+\"}\r\n                    </Text>\r\n                    \r\n                  </TouchableOpacity>\r\n                  <View style={selected===key? styles.content_show:styles.contentHide}>\r\n                      <Text>{item.content}</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                )\r\n\r\n                )\r\n              }\r\n          </ScrollView>\r\n        </View>\r\n\r\n\r\n      </SafeAreaView>  \r\n       )\r\n  }\r\n  \r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor:'rgba(18,33,65,1)',\r\n  },\r\n  header:{\r\n  flexDirection:'row',\r\n  padding:10,\r\n  },\r\n  item:{\r\n    backgroundColor:'rgba(18,33,65,1)',\r\n    padding:20,\r\n  },\r\n  itemText:{\r\n    fontSize: 16,\r\n    fontWeight:'500',\r\n    color:'darkblue'\r\n\r\n\r\n  },\r\n  contentHide: {\r\n    \r\n    backgroundColor: 'lightblue',\r\n    overflow: \"hidden\",\r\n    maxHeight: 0\r\n\r\n  },\r\n  content_show:{\r\n    \r\n    backgroundColor:'lightblue',\r\n    marginBottom:10,\r\n    marginTop:10,\r\n    padding:30,\r\n    opacity: 1,\r\n    maxHeight:9999,\r\n   \r\n\r\n  }\r\n});\r\nexport default Protocols;"]},"metadata":{},"sourceType":"module"}