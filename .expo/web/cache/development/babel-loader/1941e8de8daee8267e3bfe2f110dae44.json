{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Voice from '@react-native-community/voice';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar VoiceRecorder = function VoiceRecorder() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      result = _useState2[0],\n      setResult = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    Voice.onSpeechStart = onSpeechStartHandler;\n    Voice.onSpeechEnd = onSpeechEndHandler;\n    Voice.onSpeechResults = onSpeechResultsHandler;\n    return function () {\n      Voice.destroy().then(Voice.removeAllListeners);\n    };\n  }, []);\n\n  var onSpeechStartHandler = function onSpeechStartHandler(e) {\n    console.log(\"start handler==>>>\", e);\n  };\n\n  var onSpeechEndHandler = function onSpeechEndHandler(e) {\n    setLoading(false);\n    console.log(\"stop handler\", e);\n  };\n\n  var onSpeechResultsHandler = function onSpeechResultsHandler(e) {\n    var text = e.value[0];\n    setResult(text);\n    console.log(\"speech result handler\", e);\n  };\n\n  var startRecording = function startRecording() {\n    return _regeneratorRuntime.async(function startRecording$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Voice.start('en-Us'));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(\"error raised\", _context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 6]], Promise);\n  };\n\n  var stopRecording = function stopRecording() {\n    return _regeneratorRuntime.async(function stopRecording$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Voice.stop());\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"error raised\", _context2.t0);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(SafeAreaView, {\n      children: [_jsx(Text, {\n        style: styles.headingText,\n        children: \"Speech Recoginition\"\n      }), _jsxs(View, {\n        style: styles.textInputStyle,\n        children: [_jsx(TextInput, {\n          value: result,\n          placeholder: \"your text\",\n          style: {\n            flex: 1\n          },\n          onChangeText: function onChangeText(text) {\n            return setResult(text);\n          }\n        }), isLoading ? _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"red\"\n        }) : _jsx(TouchableOpacity, {\n          onPress: startRecording,\n          children: _jsx(Image, {\n            source: {\n              uri: 'https://raw.githubusercontent.com/AboutReact/sampleresource/master/microphone.png'\n            },\n            style: {\n              width: 25,\n              height: 25\n            }\n          })\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: {\n          alignSelf: 'center',\n          marginTop: 24,\n          backgroundColor: 'red',\n          padding: 8,\n          borderRadius: 4\n        },\n        onPress: stopRecording,\n        children: _jsx(Text, {\n          style: {\n            color: 'white',\n            fontWeight: 'bold'\n          },\n          children: \"Stop\"\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 24\n  },\n  headingText: {\n    alignSelf: 'center',\n    marginVertical: 26,\n    fontWeight: 'bold',\n    fontSize: 26\n  },\n  textInputStyle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    height: 48,\n    borderRadius: 20,\n    paddingHorizontal: 16,\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowRadius: 2,\n    elevation: 2,\n    shadowOpacity: 0.4\n  }\n});\nexport default VoiceRecorder;","map":{"version":3,"names":["React","useEffect","useState","Voice","VoiceRecorder","result","setResult","isLoading","setLoading","onSpeechStart","onSpeechStartHandler","onSpeechEnd","onSpeechEndHandler","onSpeechResults","onSpeechResultsHandler","destroy","then","removeAllListeners","e","console","log","text","value","startRecording","start","stopRecording","stop","styles","container","headingText","textInputStyle","flex","uri","width","height","alignSelf","marginTop","backgroundColor","padding","borderRadius","color","fontWeight","StyleSheet","create","marginVertical","fontSize","flexDirection","justifyContent","alignItems","paddingHorizontal","shadowOffset","shadowRadius","elevation","shadowOpacity"],"sources":["/home/cipher73/Desktop/Project/DFMPC-Student-Placement-System/Screens/VoiceRecorder.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Image, Text, StyleSheet, SafeAreaView, TextInput, TouchableOpacity, ActivityIndicator } from 'react-native';\nimport Voice from '@react-native-community/voice';\n\nconst VoiceRecorder = () => {\n\n  const [result, setResult] = useState('')\n  const [isLoading, setLoading] = useState(false)\n\n  useEffect(() => {\n    Voice.onSpeechStart = onSpeechStartHandler;\n    Voice.onSpeechEnd = onSpeechEndHandler;\n    Voice.onSpeechResults = onSpeechResultsHandler;\n   \n\n    return () => {\n      Voice.destroy().then(Voice.removeAllListeners);\n    }\n  }, [])\n\n  const onSpeechStartHandler = (e) => {\n    console.log(\"start handler==>>>\", e)\n  }\n  const onSpeechEndHandler = (e) => {\n    setLoading(false)\n    console.log(\"stop handler\", e)\n  }\n\n  const onSpeechResultsHandler = (e) => {\n    let text = e.value[0]\n    setResult(text)\n    console.log(\"speech result handler\", e)\n  }\n\n  const startRecording = async () => {\n    setLoading(true)\n    try {\n      await Voice.start('en-Us')\n    } catch (error) {\n      console.log(\"error raised\", error)\n    }\n  }\n  \n  const stopRecording = async () => {\n    try {\n      await Voice.stop()\n    } catch (error) {\n      console.log(\"error raised\", error)\n    }\n  }\n\n\n  return (\n    <View style={styles.container}>\n      <SafeAreaView>\n        <Text style={styles.headingText}>Speech Recoginition</Text>\n        <View style={styles.textInputStyle}>\n          <TextInput\n            value={result}\n            placeholder=\"your text\"\n            style={{ flex: 1 }}\n            onChangeText={text => setResult(text)}\n          />\n          {isLoading ? <ActivityIndicator size=\"large\" color=\"red\" />\n\n            :\n            \n            <TouchableOpacity\n              onPress={startRecording}\n            >\n              <Image\n                source={{ uri: 'https://raw.githubusercontent.com/AboutReact/sampleresource/master/microphone.png' }}\n                style={{ width: 25, height: 25 }}\n              />\n            </TouchableOpacity>}\n        </View>\n\n        <TouchableOpacity\n          style={{\n            alignSelf: 'center',\n            marginTop: 24,\n            backgroundColor: 'red',\n            padding: 8,\n            borderRadius: 4\n          }}\n          onPress={stopRecording}\n        >\n          <Text style={{ color: 'white', fontWeight: 'bold' }}>Stop</Text>\n        </TouchableOpacity>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 24\n  },\n  headingText: {\n    alignSelf: 'center',\n    marginVertical: 26,\n    fontWeight: 'bold',\n    fontSize: 26\n  },\n  textInputStyle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    height: 48,\n    borderRadius: 20,\n    paddingHorizontal: 16,\n    shadowOffset: { width: 0, height: 1 },\n    shadowRadius: 2,\n    elevation: 2,\n    shadowOpacity: 0.4\n  }\n});\n\n\n  export default VoiceRecorder"],"mappings":"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"},"metadata":{},"sourceType":"module"}