{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport CalendarPicker from 'react-native-calendar-picker';\nimport { useNavigation } from '@react-navigation/core';\nimport { Calendar, CalendarList, Agenda } from 'react-native-calendars';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CalendarView = function (_Component) {\n  _inherits(CalendarView, _Component);\n\n  var _super = _createSuper(CalendarView);\n\n  function CalendarView(props) {\n    var _this;\n\n    _classCallCheck(this, CalendarView);\n\n    _this = _super.call(this, props);\n\n    _this.loadItems = function (day) {\n      var items = _this.state.items || {};\n      setTimeout(function () {\n        for (var i = -15; i < 85; i++) {\n          var time = day.timestamp + i * 24 * 60 * 60 * 1000;\n\n          var strTime = _this.timeToString(time);\n\n          if (!items[strTime]) {\n            items[strTime] = [];\n            var numItems = Math.floor(Math.random() * 3 + 1);\n\n            for (var j = 0; j < numItems; j++) {\n              items[strTime].push({\n                name: 'Item for ' + strTime + ' #' + j,\n                height: Math.max(50, Math.floor(Math.random() * 150)),\n                day: strTime\n              });\n            }\n          }\n        }\n\n        var newItems = {};\n        Object.keys(items).forEach(function (key) {\n          newItems[key] = items[key];\n        });\n\n        _this.setState({\n          items: newItems\n        });\n      }, 1000);\n    };\n\n    _this.renderItem = function (reservation, isFirst) {\n      var fontSize = isFirst ? 16 : 14;\n      var color = isFirst ? 'black' : '#43515c';\n      return _jsx(TouchableOpacity, {\n        testID: testIDs.agenda.ITEM,\n        style: [styles.item, {\n          height: reservation.height\n        }],\n        onPress: function onPress() {\n          return Alert.alert(reservation.name);\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: fontSize,\n            color: color\n          },\n          children: reservation.name\n        })\n      });\n    };\n\n    _this.renderEmptyDate = function () {\n      return _jsx(View, {\n        style: styles.emptyDate,\n        children: _jsx(Text, {\n          children: \"This is empty date!\"\n        })\n      });\n    };\n\n    _this.rowHasChanged = function (r1, r2) {\n      return r1.name !== r2.name;\n    };\n\n    _this.state = {\n      selectedStartDate: null,\n      selectedEndDate: null\n    };\n    _this.onDateChange = _this.onDateChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CalendarView, [{\n    key: \"onDateChange\",\n    value: function onDateChange(date, type) {\n      if (type === 'END_DATE') {\n        this.setState({\n          selectedEndDate: date\n        });\n      } else {\n        this.setState({\n          selectedStartDate: date,\n          selectedEndDate: null\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedStartDate = _this$state.selectedStartDate,\n          selectedEndDate = _this$state.selectedEndDate;\n      var minDate = new Date();\n      var maxDate = new Date(2050, 6, 3);\n      var startDate = selectedStartDate ? selectedStartDate.toString() : '';\n      var endDate = selectedEndDate ? selectedEndDate.toString() : '';\n      return _jsx(Agenda, {\n        testID: testIDs.agenda.CONTAINER,\n        items: this.state.items,\n        loadItemsForMonth: this.loadItems,\n        selected: '2017-05-16',\n        renderItem: this.renderItem,\n        renderEmptyDate: this.renderEmptyDate,\n        rowHasChanged: this.rowHasChanged,\n        showClosingKnob: true\n      });\n    }\n  }, {\n    key: \"timeToString\",\n    value: function timeToString(time) {\n      var date = new Date(time);\n      return date.toISOString().split('T')[0];\n    }\n  }]);\n\n  return CalendarView;\n}(Component);\n\nexport { CalendarView as default };\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: 'white',\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/callu/Documents/DFMPC/DFMPC-Student-Placement-System/Screens/CalendarView.js"],"names":["React","Component","CalendarPicker","useNavigation","Calendar","CalendarList","Agenda","CalendarView","props","loadItems","day","items","state","setTimeout","i","time","timestamp","strTime","timeToString","numItems","Math","floor","random","j","push","name","height","max","newItems","Object","keys","forEach","key","setState","renderItem","reservation","isFirst","fontSize","color","testIDs","agenda","ITEM","styles","item","Alert","alert","renderEmptyDate","emptyDate","rowHasChanged","r1","r2","selectedStartDate","selectedEndDate","onDateChange","bind","date","type","minDate","Date","maxDate","startDate","toString","endDate","CONTAINER","toISOString","split","StyleSheet","create","backgroundColor","flex","borderRadius","padding","marginRight","marginTop","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableHighlight,\r\n  Image\r\n} from 'react-native';\r\nimport CalendarPicker from 'react-native-calendar-picker';\r\nimport {useNavigation} from '@react-navigation/core'\r\nimport {Calendar,CalendarList,Agenda} from 'react-native-calendars';\r\n\r\n\r\nexport default class CalendarView extends Component {\r\n  \r\n  constructor(props) {\r\n    \r\n    super(props);\r\n    this.state = {\r\n      selectedStartDate: null,\r\n      selectedEndDate: null,\r\n    };\r\n    this.onDateChange = this.onDateChange.bind(this);\r\n  }\r\n\r\n  onDateChange(date, type) {\r\n    if (type === 'END_DATE') {\r\n      this.setState({\r\n        selectedEndDate: date,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        selectedStartDate: date,\r\n        selectedEndDate: null,\r\n      });\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    \r\n    const { selectedStartDate, selectedEndDate } = this.state;\r\n    const minDate = new Date(); // Today\r\n    const maxDate = new Date(2050, 6, 3);\r\n    const startDate  =  selectedStartDate ? selectedStartDate.toString() : '';\r\n    const endDate = selectedEndDate ? selectedEndDate.toString() : '';\r\n    \r\n    return (\r\n      <Agenda\r\n        testID={testIDs.agenda.CONTAINER}\r\n        items={this.state.items}\r\n        loadItemsForMonth={this.loadItems}\r\n        selected={'2017-05-16'}\r\n        renderItem={this.renderItem}\r\n        renderEmptyDate={this.renderEmptyDate}\r\n        rowHasChanged={this.rowHasChanged}\r\n        showClosingKnob={true}\r\n        // markingType={'period'}\r\n        // markedDates={{\r\n        //    '2017-05-08': {textColor: '#43515c'},\r\n        //    '2017-05-09': {textColor: '#43515c'},\r\n        //    '2017-05-14': {startingDay: true, endingDay: true, color: 'blue'},\r\n        //    '2017-05-21': {startingDay: true, color: 'blue'},\r\n        //    '2017-05-22': {endingDay: true, color: 'gray'},\r\n        //    '2017-05-24': {startingDay: true, color: 'gray'},\r\n        //    '2017-05-25': {color: 'gray'},\r\n        //    '2017-05-26': {endingDay: true, color: 'gray'}}}\r\n        // monthFormat={'yyyy'}\r\n        // theme={{calendarBackground: 'red', agendaKnobColor: 'green'}}\r\n        //renderDay={(day, item) => (<Text>{day ? day.day: 'item'}</Text>)}\r\n        // hideExtraDays={false}\r\n        // showOnlySelectedDayItems\r\n      />\r\n    );\r\n  }\r\n\r\n  loadItems = (day: DateData) => {\r\n    const items = this.state.items || {};\r\n\r\n    setTimeout(() => {\r\n      for (let i = -15; i < 85; i++) {\r\n        const time = day.timestamp + i * 24 * 60 * 60 * 1000;\r\n        const strTime = this.timeToString(time);\r\n\r\n        if (!items[strTime]) {\r\n          items[strTime] = [];\r\n          \r\n          const numItems = Math.floor(Math.random() * 3 + 1);\r\n          for (let j = 0; j < numItems; j++) {\r\n            items[strTime].push({\r\n              name: 'Item for ' + strTime + ' #' + j,\r\n              height: Math.max(50, Math.floor(Math.random() * 150)),\r\n              day: strTime\r\n            });\r\n          }\r\n        }\r\n      }\r\n      \r\n      const newItems: AgendaSchedule = {};\r\n      Object.keys(items).forEach(key => {\r\n        newItems[key] = items[key];\r\n      });\r\n      this.setState({\r\n        items: newItems\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  renderItem = (reservation: AgendaEntry, isFirst: boolean) => {\r\n    const fontSize = isFirst ? 16 : 14;\r\n    const color = isFirst ? 'black' : '#43515c';\r\n\r\n    return (\r\n      <TouchableOpacity\r\n        testID={testIDs.agenda.ITEM}\r\n        style={[styles.item, {height: reservation.height}]}\r\n        onPress={() => Alert.alert(reservation.name)}\r\n      >\r\n        <Text style={{fontSize, color}}>{reservation.name}</Text>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n\r\n  renderEmptyDate = () => {\r\n    return (\r\n      <View style={styles.emptyDate}>\r\n        <Text>This is empty date!</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  rowHasChanged = (r1: AgendaEntry, r2: AgendaEntry) => {\r\n    return r1.name !== r2.name;\r\n  }\r\n\r\n  timeToString(time: number) {\r\n    const date = new Date(time);\r\n    return date.toISOString().split('T')[0];\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    backgroundColor: 'white',\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}